# --- Importar as bibliotecas --- #
import pandas as pd
from PIL import Image
import streamlit as st

# --- Configura√ß√µes iniciais da p√°gina --- #
st.set_page_config(
    page_title='Cap√≠tulo 02 - Projeto de aprendizado de m√°quina de ponta a ponta',
    page_icon=Image.open('./assets/logo/logo.png'),
    layout='wide'
)

# --- Carregar o estilo das fontes --- #
with open('./assets/css/style.css', 'r') as css:
    st.html(f'<style>{css.read()}</style>')

# --- Colocar o banner do cap√≠tulo --- #
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/aula_02.png')

# --- Introdu√ß√£o --- #
st.html('<h1 class="fonte_titulo_aula">Introdu√ß√£o</h1>')
st.html('<p class="fonte_texto">Neste cap√≠tulo, voc√™ trabalhar√° em um projeto de exemplo de ponta a ponta, '
        'fingindo ser um cientista de dados rec√©m-contratado em uma empresa imobili√°ria. Aqui est√£o as '
        'principais etapas pelas quais voc√™ passar√°:</p>')
st.html('<ol type=1 class="fonte_texto">'
        '<li>Olhar para o quadro geral.</li>'
        '<li>Obter os dados.</li>'
        '<li>Descubrir e visualizar os dados para obter insights.</li>'
        '<li>Preparar os dados para algoritmos de aprendizado de m√°quina.</li>'
        '<li>Selecionar um modelo e trein√°-lo.</li>'
        '<li>Ajustar seu modelo.</li>'
        '<li>Apresentar sua solu√ß√£o.</li>'
        '<li>Lan√ßar, monitorar e mantenher seu sistema.</li>'
        '</ol>')

# --- Trabalhando com dados reais --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Trabalhando com dados reais</h1>')
st.html('<p class="fonte_texto">Quando voc√™ est√° aprendendo sobre aprendizado de m√°quina, √© melhor '
        'experimentar dados do mundo real, n√£o conjuntos de dados artificiais. Felizmente, existem '
        'milhares de conjuntos de dados abertos para escolher, abrangendo todos os tipos de dom√≠nios. '
        'Aqui est√£o alguns lugares onde voc√™ pode procurar para obter dados:</p>')
st.html('<ul class="fonte_texto">'
        '<li>Reposit√≥rios populares de dados abertos:</li>'
            '<ul class="fonte_texto">'
                '<li><a href="https://archive.ics.uci.edu/">UC Irvine Machine Learning Repository</a></li>'
                '<li><a href="https://www.kaggle.com/datasets">Conjunto de dados no Kaggle</a></li>'
                '<li><a href="https://registry.opendata.aws/">Conjunto de Dados no AWS da Amazon</a></li>'
            '</ul>'
        '<li>Portal Meta (eles listam reposit√≥rios de dados abertos):</li>'
            '<ul class="fonte_texto">'
                '<li><a href="https://dataportals.org/">Data Portals</a></li>'
                '<li><a href="https://project.opendatamonitor.eu/">OpenDataMonitor</a></li>'
                '<li><a href="https://data.nasdaq.com/institutional-investors">Quandl</a></li>'
            '</ul>'
        '<li>Outras p√°ginas listando muitos reposit√≥rios populares de dados abertos:</li>'
            '<ul class="fonte_texto">'
                '<li><a href="https://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research">Lista de conjuntos de dados de Aprendizado de M√°quina do Wikipedia</a></li>'
                '<li><a href="https://www.quora.com/Where-can-I-find-large-datasets-open-to-the-public">Quora.com</a></li>'
                '<li><a href="https://www.reddit.com/r/datasets/">Conjuntos de dados no Reddit</a></li>'
            '</ul>')
st.html('<p class="fonte_texto">Neste cap√≠tulo usaremos o conjunto de dados <i>California Housing Prices</i> '
        'do reposit√≥rio StatLib (veja a Figura 2-1). Este conjunto de dados √© baseado em dados do censo '
        'da Calif√≥rnia de 1990. N√£o √© exatamente recente (uma bela casa na Ba√≠a de S√£o Francisco ainda era '
        'acess√≠vel na '
        '√©poca), mas tem muitas qualidades para o aprendizado, ent√£o vamos fingir que s√£o dados recentes. '
        'Para fins de ensino, adicionei um atributo categ√≥rico e removi alguns recursos.</p>')
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_01.png',
         caption='Figura 2-1. Pre√ßos de casas na Calif√≥rnia.')

# --- Olhe para o quadro geral --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Olhe para o quadro geral</h1>')
st.html('<p class="fonte_texto">Bem-vindo √† Machine Learning Housing Corporation! A sua primeira tarefa '
        '√© utilizar os dados do censo da Calif√≥rnia para construir um modelo dos pre√ßos da habita√ß√£o no '
        'estado. Esses dados incluem m√©tricas como popula√ß√£o, renda m√©dia e pre√ßo m√©dio da habita√ß√£o para '
        'cada grupo de quarteir√µes na Calif√≥rnia. Os grupos de quarteir√µes s√£o a menor unidade geogr√°fica '
        'para a qual o <i>US Census Bureau</i> publica dados de amostra (um grupo de quarteir√µes '
        'normalmente tem '
        'uma popula√ß√£o de 600 a 3.000 pessoas). Vamos cham√°-los abreviadamente de ‚Äúdistritos‚Äù. Seu modelo '
        'deve aprender com esses dados e ser capaz de prever o pre√ßo m√©dio da habita√ß√£o em qualquer '
        'distrito, dadas todas as outras m√©tricas.</p>')
with st.expander('Dica 1', icon='üí°'):
    st.html('<p class="fonte_texto">Como voc√™ √© um cientista de dados bem organizado, a primeira coisa que '
            'deve fazer √© obter a lista de verifica√ß√£o do projeto de aprendizado de m√°quina. Neste cap√≠tulo '
            'examinaremos muitos itens da lista de verifica√ß√£o, mas tamb√©m pularemos alguns, seja porque '
            's√£o autoexplicativos ou porque ser√£o discutidos em cap√≠tulos posteriores.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Enquadre o problema</h2>')
st.html('<p class="fonte_texto">A primeira pergunta a fazer ao seu chefe √© qual √© exatamente o objetivo do '
        'neg√≥cio. Construir um modelo provavelmente n√£o √© o objetivo final. Como a empresa espera usar e se '
        'beneficiar desse modelo? Conhecer o objetivo √© importante porque determinar√° como voc√™ enquadra o '
        'problema, quais algoritmos voc√™ selecionar√°, qual medida de desempenho voc√™ usar√° para avaliar seu '
        'modelo e quanto esfor√ßo voc√™ gastar√° para ajust√°-lo.</p>')
st.html('<p class="fonte_texto">O seu chefe responde que o resultado do seu modelo (uma previs√£o do pre√ßo '
        'm√©dio da habita√ß√£o num distrito) ser√° transmitido a outro sistema de aprendizagem autom√°tica '
        '(ver Figura 2-2), juntamente com muitos outros sinais. Este sistema a jusante determinar√° se vale '
        'a pena investir numa determinada √°rea ou n√£o. Fazer isso da maneira certa √© fundamental, pois '
        'afeta diretamente as receitas.</p>')
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_02.png',
         caption='Figura 2-2. Um pipeline de Aprendizado de M√°quina para investimentos imobili√°rios.')
with st.expander('Pipeline'):
    st.html('<p class="fonte_texto">Uma sequ√™ncia de componentes de processamento de dados √© chamada de '
            '<i>pipeline</i> de dados. Pipelines s√£o muito comuns em sistemas de Aprendizado de M√°quina, '
            'pois h√° '
            'muitos dados para manipular e muitas transforma√ß√µes de dados para aplicar.</p>')
    st.html('<p class="fonte_texto">Os componentes normalmente s√£o executados de forma ass√≠ncrona. Cada '
            'componente extrai uma grande quantidade de dados, processa-os e exibe o resultado em outro '
            'armazenamento de dados. Ent√£o, algum tempo depois, o pr√≥ximo componente no pipeline extrai '
            'esses dados e gera sua pr√≥pria sa√≠da. Cada componente √© bastante independente: a interface '
            'entre os componentes √© simplesmente o armazenamento de dados. Isso torna o sistema simples de '
            'entender (com a ajuda de um gr√°fico de fluxo de dados), e diferentes equipes podem se '
            'concentrar em diferentes componentes. Al√©m disso, se um componente quebrar, os componentes '
            'posteriores podem muitas vezes continuar a funcionar normalmente (pelo menos por um tempo) '
            'usando apenas a √∫ltima sa√≠da do componente quebrado. Isso torna a arquitetura bastante '
            'robusta.</p>')
    st.html('<p class="fonte_texto">Por outro lado, um componente quebrado pode passar despercebido por '
            'algum tempo se o monitoramento adequado n√£o for implementado. Os dados ficam obsoletos e o '
            'desempenho geral do sistema cai.</p>')
st.html('<p class="fonte_texto">A pr√≥xima pergunta a ser feita ao seu chefe √© como √© a solu√ß√£o atual (se '
        'houver). A situa√ß√£o atual muitas vezes lhe dar√° uma refer√™ncia de desempenho, bem como insights '
        'sobre como resolver o problema. O seu chefe responde que os pre√ßos da habita√ß√£o distrital s√£o '
        'atualmente estimados manualmente por especialistas: uma equipa re√∫ne informa√ß√µes atualizadas '
        'sobre um distrito e, quando n√£o conseguem obter o pre√ßo m√©dio da habita√ß√£o, estimam-no '
        'utilizando regras complexas.</p>')
st.html('<p class="fonte_texto">Isto √© caro e demorado, e as estimativas n√£o s√£o boas; nos casos em que '
        'conseguem descobrir o pre√ßo m√©dio real da habita√ß√£o, muitas vezes percebem que as suas '
        'estimativas estavam erradas em mais de 20%. √â por isso que a empresa pensa que seria √∫til '
        'treinar um modelo para prever o pre√ßo m√©dio da habita√ß√£o num distrito, devido a outros dados sobre '
        'esse distrito. Os dados do censo parecem ser um excelente conjunto de dados a explorar para este '
        'fim, uma vez que incluem os pre√ßos m√©dios da habita√ß√£o de milhares de distritos, bem como outros '
        'dados.</p>')
st.html('<p class="fonte_texto">Com todas essas informa√ß√µes, agora voc√™ est√° pronto para come√ßar a '
        'projetar seu sistema. Primeiro, voc√™ precisa enquadrar o problema: √© supervisionado, n√£o '
        'supervisionado ou aprendizado por refor√ßo? √â uma tarefa de classifica√ß√£o, uma tarefa de regress√£o '
        'ou outra coisa? Voc√™ deve usar aprendizagem em lote ou t√©cnicas de aprendizagem online? Antes '
        'de continuar lendo, fa√ßa uma pausa e tente responder a essas perguntas voc√™ mesmo.</p>')
st.html('<p class="fonte_texto">Voc√™ encontrou as respostas? Vejamos: √© claramente uma tarefa t√≠pica de '
        'aprendizagem supervisionada, uma vez que lhe s√£o dados exemplos de forma√ß√£o <i>etiquetados</i> '
        '(cada inst√¢ncia vem com o resultado esperado, ou seja, o pre√ßo m√©dio da habita√ß√£o no distrito). '
        '√â tamb√©m uma tarefa t√≠pica de regress√£o, pois √© solicitado que voc√™ preveja um valor. Mais '
        'especificamente, este √© um problema de <i>regress√£o m√∫ltipla</i>, uma vez que o sistema '
        'utilizar√° m√∫ltiplas caracter√≠sticas para fazer uma previs√£o (utilizar√° a popula√ß√£o do distrito, '
        'o rendimento mediano, etc.). √â tamb√©m um problema de <i>regress√£o univariada</i>, uma vez que '
        'estamos apenas a tentar prever um √∫nico valor para cada distrito. Se estiv√©ssemos tentando '
        'prever v√°rios valores por distrito, seria um problema de <i>regress√£o multivariada</i>. '
        'Finalmente, n√£o h√° fluxo cont√≠nuo de dados entrando no sistema, n√£o h√° necessidade espec√≠fica '
        'de se ajustar rapidamente √†s mudan√ßas de dados e os dados s√£o pequenos o suficiente para caber '
        'na mem√≥ria, portanto, o aprendizado simples em lote deve funcionar perfeitamente.</p>')
with st.expander('Dica 2', icon='üí°'):
    st.html('<p class="fonte_texto">Se os dados fossem enormes, voc√™ poderia dividir seu trabalho de '
            'aprendizagem em lote em v√°rios servidores (usando a t√©cnica MapReduce) ou usar uma t√©cnica de '
            'aprendizagem online.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Selecione uma medida de desempenho</h2>')
st.html('<p class="fonte_texto">A pr√≥xima etapa √© selecionar uma medida de desempenho. Uma medida de '
        'desempenho t√≠pica para problemas de regress√£o √© o Raiz do Erro Quadr√°tico M√©dio (REQM). D√° uma ideia '
        'de quanto erro o sistema normalmente comete em suas previs√µes, com peso maior para erros grandes. '
        'A abaixo mostra a f√≥rmula matem√°tica para calcular o REQM.</p>')
st.latex(r'REQM(\mathbf{X}, h) = \sqrt{\frac{1}{m}\sum_{i=1}^{m}(h(\mathbf{x}^{(i)})) - y^{(i)}}')
with st.expander('Nota√ß√µes'):
    st.html('<p class="fonte_texto">Esta equa√ß√£o apresenta v√°rias nota√ß√µes muito comuns de aprendizado de '
            'm√°quina que usaremos ao longo do nosso estudo:</p>')
    st.html('<ul class="fonte_texto">'
                '<li><b>m</b> √© o n√∫mero de inst√¢ncias no conjunto de dados em que voc√™ est√° medindo o '
                'REQM.</li>'
                '<ul class="fonte_texto">'
                    '<li>Por exemplo, se voc√™ estiver avaliando o REQM em um conjunto de valida√ß√£o de 2.000 '
                    'distritos, ent√£o m = 2.000.</li>'
                '</ul>'
                '<li><b>x&#8317;&#8305;&#8318;</b> √© um vetor de todos os valores de recurso (excluindo o r√≥tulo) do '
                '<i-√©simo</i> termo no conjunto de dados, e <b>y&#8317;&#8305;&#8318;</b> √© seu r√≥tulo (o valor de sa√≠da desejado '
                'para essa inst√¢ncia).</li>'
                '<ul class="fonte_texto">'
                    '<li>Por exemplo, se o primeiro distrito no conjunto de dados estiver localizado na '
                    'longitude ‚Äì118,29¬∞, latitude 33,91¬∞, e tiver 1.416 habitantes com uma renda m√©dia de US$ '
                    '38.372, e o valor m√©dio da casa for US$ 156.400 (ignorando os outros recursos por '
            'enquanto), ent√£o:</li>'
            '</ul>')
    st.latex(r'''\mathbf{x}^{(1)} = \begin{pmatrix}
-118,29 \\
33,91 \\
1416 \\
38.372 \\
\end{pmatrix}''')
    st.html('<p class="fonte_texto">e</p>')
    st.latex('y^{(1)} = 156.400')
    st.html('<ul class="fonte_texto">'
                '<li><b>X</b> √© uma matriz que cont√©m todos os valores de recursos (excluindo r√≥tulos) de '
                'todas as inst√¢ncias no conjunto de dados. H√° uma linha por inst√¢ncia, e a i-√©sima linha '
                '√© igual √† transposta de <b>x<sup>(i)</sup></b> , notada (<b>x<sup>(i)</sup></b>)<sup>‚ä∫'
                '</sup>.</li>'
                '<ul class="fonte_texto">'
                    '<li>Por exemplo, se o primeiro distrito for como descrito, ent√£o a matriz <b>X</b> ter√° '
                    'esta apar√™ncia:</li>'
                '</ul>'
            '</ul>')
    st.latex(r'''\mathbf{X} = \begin{pmatrix}
\mathbf{(x^{(1)})}^{T} \\
\mathbf{(x^{(2)})}^{T} \\
\vdots  \\
\mathbf{(x^{(1999)})}^{T} \\
\mathbf{(x^{(2000)})}^{T} \\
\end{pmatrix} = \begin{pmatrix}
-188,29 & 33,91 & 1416 & 38.372 \\
\vdots & \vdots & \vdots & \vdots \\
\end{pmatrix}''')
    st.html('<ul class="fonte_texto">'
                '<li><b>h</b> √© a fun√ß√£o de previs√£o do seu sistema, tamb√©m chamada de <i>hip√≥tese</i>. '
                'Quando seu sistema recebe um vetor de recursos de uma inst√¢ncia x<sup>(i)</sup>, '
                'ele gera um valor '
                'previsto ≈∑<sup>(i)</sup> = h(x<sup>(i)</sup>) para essa inst√¢ncia (≈∑ √© pronunciado '
                '‚Äúy-hat‚Äù).</li>'
                '<ul class="fonte_texto">'
                    '<li>Por exemplo, se o seu sistema prev√™ que o pre√ßo m√©dio da habita√ß√£o no primeiro '
                    'distrito √© de US$ 158.400, ent√£o ≈∑<sup>(1)</sup> = h(x<sup>(1)</sup>) = 158.400. O '
                    'erro de previs√£o para este distrito √© ≈∑<sup>(1)</sup> ‚Äì y<sup>(1)</sup> = 2.000.</li>'
                '</ul>'
                '<li>REQM(<b>X</b>,h) √© a fun√ß√£o de custo medida no conjunto de exemplos usando sua '
                'hip√≥tese <i>h</i>.</li>'
            '</ul>')
    st.html('<p class="fonte_texto">Usamos fonte min√∫scula em it√°lico para valores escalares (como <i>m</i> '
            'ou <i>y<sup>(i)</sup></i> ) e nomes de fun√ß√µes (como <i>h</i>), fonte min√∫scula em negrito para '
            'vetores (como <b>x<sup>(i)</sup></b> ) e fonte mai√∫scula em negrito para matrizes (como '
            '<b>X</b>).</p>')
st.html('<p class="fonte_texto">Embora o REQM seja geralmente a medida de desempenho preferida para tarefas '
        'de regress√£o, em alguns contextos voc√™ pode preferir usar outra fun√ß√£o. Por exemplo, suponha '
        'que existam muitos distritos at√≠picos. Nesse caso, voc√™ pode considerar usar o <i>erro m√©dio '
        'absoluto</i> (EMA, tamb√©m chamado de desvio absoluto m√©dio):</p>')
st.latex(r'EMA(\mathbf{X}, h) = \frac{1}{m}\sum_{i=1}^{m}|h(\mathbf{x}^{(i)})-y^{(i)}|')
st.html('<p class="fonte_texto">Tanto o REQM quanto o EMA s√£o formas de medir a dist√¢ncia entre dois '
        'vetores: o vetor de previs√µes e o vetor de valores alvo. V√°rias medidas de dist√¢ncia, ou '
        '<i>normas</i>, s√£o poss√≠veis:</p>')
st.html('<ul class="fonte_texto">'
            '<li>Calcular a raiz de uma soma de quadrados (REQM) corresponde √† <i>norma euclidiana</i>: '
            'esta √© a no√ß√£o de dist√¢ncia com a qual voc√™ est√° familiarizado. Tamb√©m √© chamada de '
            '<i>‚Ñì<sub>2</sub> norma</i>, notada ‚à• ¬∑ ‚à•<sub>2</sub> (ou apenas ‚à• ¬∑ ‚à•).</li>'
            '<li>O c√°lculo da soma dos absolutos (EMA) corresponde √† norma <i>‚Ñì<sub>1</sub></i>, notada '
            '‚à• ¬∑ ‚à•<sub>1</sub>. Isso √†s vezes √© chamado de <i>norma de Manhattan</i> porque mede a '
            'dist√¢ncia entre dois pontos em uma cidade se voc√™ s√≥ puder viajar ao longo de quarteir√µes '
            'ortogonais da cidade.</li>'
            '<li>Mais genericamente, a norma <i>‚Ñì<sub>k</sub></i> de um vetor <b>v</b> contendo <i>n</i> '
            'elementos √© definida como ‚à•<b>v</b>‚à•<sub>k</sub> = (|v<sub>0</sub>|<sup>k</sup> + '
            '|v<sub>1</sub>|<sup>k</sup> + ... + |v<sub>n</sub>|<sup>k</sup>)<sup>1/k</sup>. '
            '<i>‚Ñì<sub>0</sub></i> fornece o n√∫mero de elementos diferentes de zero no vetor e '
            '<i>‚Ñì<sub>‚àû</sub></i> fornece o valor absoluto m√°ximo no vetor.</li>'
            '<li>Quanto maior o √≠ndice de norma, mais ele se concentra nos valores grandes e negligencia '
            'os pequenos. √â por isso que o REQM √© mais sens√≠vel a valores discrepantes do que o EMA. Mas '
            'quando os valores discrepantes s√£o exponencialmente raros (como em uma curva em forma de sino), '
            'o REQM tem um desempenho muito bom e geralmente √© o preferido.</li>'
        '</ul>')
st.html('<h2 class="fonte_subtitulo_aula">Verifique as hip√≥teses</h2>')
st.html('<p class="fonte_texto">Por √∫ltimo, √© uma boa pr√°tica listar e verificar as suposi√ß√µes feitas at√© '
        'agora (por voc√™ ou por outras pessoas); isso pode ajud√°-lo a detectar problemas s√©rios desde o '
        'in√≠cio. Por exemplo, os pre√ßos distritais gerados pelo seu sistema ser√£o inseridos em um sistema '
        'de aprendizado de m√°quina downstream, e voc√™ assume que esses pre√ßos ser√£o usados como tal. Mas '
        'e se o sistema a jusante converter os pre√ßos em categorias (por exemplo, ‚Äúbarato‚Äù, ‚Äúm√©dio‚Äù ou '
        '‚Äúcaro‚Äù) e depois utilizar essas categorias em vez dos pr√≥prios pre√ßos? Neste caso, acertar o '
        'pre√ßo perfeitamente n√£o √© importante; seu sistema s√≥ precisa acertar a categoria. Se for assim, '
        'ent√£o o problema deveria ter sido enquadrado como uma tarefa de classifica√ß√£o, n√£o como uma '
        'tarefa de regress√£o. Voc√™ n√£o vai querer descobrir isso depois de trabalhar em um sistema de '
        'regress√£o por meses.</p>')
st.html('<p class="fonte_texto">Felizmente, depois de conversar com a equipe respons√°vel pelo sistema '
        'downstream, voc√™ tem certeza de que eles realmente precisam dos pre√ßos reais, n√£o apenas das '
        'categorias. √ìtimo! Est√° tudo pronto, as luzes est√£o verdes e voc√™ pode come√ßar a codificar '
        'agora!</p>')

# --- Obtenha os dados --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Obtenha os dados</h1>')
st.html('<p class="fonte_texto">√â hora de colocar a m√£o na massa! N√£o hesite em pegar seu computador e '
        'escrever junto os c√≥digos a seguir. Para essa aula e as futuras, recomendo que utilize o '
        '<a href="https://colab.google/">Google Colaboratory</a> ou o <a href="https://jupyter.org/">'
        'Jupyter Notebook</a>.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Baixe os dados</h2>')
st.html('<p class="fonte_texto">Em ambientes t√≠picos, seus dados estariam dispon√≠veis em um banco de dados '
        'relacional (ou algum outro armazenamento de dados comum) e espalhados por v√°rias '
        'tabelas/documentos/arquivos. Para acess√°-lo, primeiro voc√™ precisa obter suas credenciais e '
        'autoriza√ß√µes de acesso e se familiarizar com o esquema de dados. Neste projeto, por√©m, as coisas '
        's√£o muito mais simples: basta baixar um √∫nico arquivo compactado, <i>housing.tgz</i>, que cont√©m um '
        'arquivo de valores separados por v√≠rgula (CSV) chamado <i>housing.csv</i> com todos os dados.</p>')
st.html('<p class="fonte_texto">Voc√™ pode usar seu navegador para baixar o arquivo e descompact√°-lo '
        'para extrair o arquivo CSV, mas √© prefer√≠vel criar uma pequena '
        'fun√ß√£o para fazer isso. Ter uma fun√ß√£o que baixe os dados √© √∫til principalmente se os dados mudam '
        'regularmente: voc√™ pode escrever um pequeno script que use a fun√ß√£o para buscar os dados mais '
        'recentes (ou pode configurar um trabalho agendado para fazer isso automaticamente em intervalos '
        'regulares). Automatizar o processo de busca de dados tamb√©m √© √∫til se voc√™ precisar instalar o '
        'conjunto de dados em v√°rias m√°quinas. Aqui est√° a fun√ß√£o para baixar os dados:</p>')
st.code('''import os
import urllib
import tarfile

RAIZ_DOWNLOAD = 'https://raw.githubusercontent.com/ageron/handson-ml2/master/'
HOUSING_CAMINHO = os.path.join('datasets', 'housing')
HOUSING_URL = RAIZ_DOWNLOAD + 'datasets/housing/housing.tgz'

def baixar_dados_housing(housing_url=HOUSING_URL, housing_caminho=HOUSING_CAMINHO):
    os.makedirs(housing_caminho, exist_ok=True)
    caminho_tgz = os.path.join(housing_caminho, 'housing.tgz')
    urllib.request.urlretrieve(housing_url, caminho_tgz)
    housing_tgz = tarfile.open(caminho_tgz)
    housing_tgz.extractall(path=housing_caminho)
    housing_tgz.close()''', line_numbers=True)
st.html('<p class="fonte_texto">Agora, quando voc√™ chama <b>baixar_dados_housing()</b>, ele cria um '
        'diret√≥rio datasets/housing em seu espa√ßo de trabalho, baixa o arquivo <i>housing.tgz</i> e '
        'extrai o arquivo <i>housing.csv</i> dele neste diret√≥rio:</p>')
st.code('baixar_dados_housing()', line_numbers=True)
st.html('<p class="fonte_texto">Agora vamos carregar os dados usando pandas. Mais uma vez, voc√™ deve '
        'escrever uma pequena fun√ß√£o para carregar os dados:</p>')
st.code('''import pandas as pd

def carregar_dados_housing(housing_caminho=HOUSING_CAMINHO):
    csv_caminho = os.path.join(housing_caminho, 'housing.csv')
    return pd.read_csv(csv_caminho)''', line_numbers=True)
st.html('<p class="fonte_texto">Esta fun√ß√£o retorna um objeto DataFrame do pandas contendo todos '
        'os dados.</p>')
st.html('<h2 class="fonte_subtitulo_aula">D√™ uma olhada r√°pida na estrutura de dados</h2>')
st.html('<p class="fonte_texto">Vamos dar uma olhada nas cinco primeiras linhas usando o m√©todo '
        '<b>head()</b> do DataFrame:</p>')
st.code('''housing = carregar_dados_housing()
housing.head()''', line_numbers=True)
tabela_2_1 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_1.csv')
st.dataframe(tabela_2_1, hide_index=True)
st.html('<p class="fonte_texto">Cada linha representa um distrito. Existem 10 atributos: <b>longitude</b>, '
        '<b>latitude</b>, <b>housing_median_age</b>, <b>total_rooms</b>, <b>total_bedrooms</b>, '
        '<b>population</b>, <b>households</b>, <b>median_income</b>, '
        '<b>median_house_value</b> e <b>ocean_proximity</b>.</p>')
st.html('<p class="fonte_texto">O m√©todo <b>info()</b> √© √∫til para obter uma descri√ß√£o r√°pida dos dados, '
        'em particular o n√∫mero total de linhas, o tipo de cada atributo e o n√∫mero de valores n√£o '
        'nulos:</p>')
st.code('housing.info()', line_numbers=True)
tabela_2_2 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_2.csv')
st.dataframe(tabela_2_2, hide_index=True)
st.html('<p class="fonte_texto">Existem 20.640 inst√¢ncias no conjunto de dados, o que significa que ele √© '
        'bastante pequeno para os padr√µes de aprendizado de m√°quina, mas √© perfeito para come√ßar. Observe '
        'que o atributo <b>total_bedrooms</b> possui apenas 20.433 valores n√£o nulos, o que significa que '
        '207 distritos n√£o possuem esse recurso. Precisaremos cuidar disso mais tarde.</p>')
st.html('<p class="fonte_texto">Todos os atributos s√£o num√©ricos, exceto o campo <b>ocean_proximity</b>. '
        'Seu tipo √© <b>object</b>, ent√£o ele pode conter qualquer tipo de objeto Python. Mas como voc√™ '
        'carregou esses dados de um arquivo CSV, voc√™ sabe que deve ser um atributo de texto. Ao observar '
        'as cinco primeiras linhas, voc√™ provavelmente notou que os valores na coluna '
        '<b>ocean_proximity</b> eram repetitivos, o que significa que provavelmente √© um atributo '
        'categ√≥rico. Voc√™ pode descobrir quais categorias existem e quantos distritos pertencem a cada '
        'categoria usando o m√©todo <b>value_counts()</b>:</p>')
st.code("housing['ocean_proximity'].value_counts()", line_numbers=True)
tabela_2_3 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_3.csv')
st.dataframe(tabela_2_3, hide_index=True)
st.html('<p class="fonte_texto">Vejamos os outros campos. O m√©todo <b>describe()</b> mostra um resumo '
        'dos atributos num√©ricos:</p>')
st.code('housing.describe().T', line_numbers=True)
tabela_2_4 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_4.csv')
st.dataframe(tabela_2_4, hide_index=True)
st.html('<p class="fonte_texto">As colunas <b>count</b>, <b>mean</b>, <b>min</b> e <b>max</b> s√£o '
        'autoexplicativas. Observe que os valores nulos s√£o ignorados (por exemplo, a <b>contagem</b> de '
        '<b>total_bedrooms</b> √© 20.433, n√£o 20.640). A coluna <b>std</b> mostra o <i>desvio padr√£o<i>, '
        'que mede o qu√£o dispersos est√£o os valores. As colunas 25%, 50% e 75% mostram os <i>percentis</i> '
        'correspondentes: um percentil indica o valor abaixo do qual cai uma determinada porcentagem de '
        'observa√ß√µes em um grupo de observa√ß√µes. Por exemplo, 25% dos distritos t√™m uma '
        '<b>housing_median_age</b> inferior a 18 anos, enquanto 50% s√£o inferiores a 29 e 75% s√£o '
        'inferiores a 37. Estes s√£o frequentemente chamados de primeiro <i>quartil</i>, '
        'mediana (segundo quartil) e ou terceiro quartil.</p>')
st.html('<p class="fonte_texto">Outra maneira r√°pida de ter uma ideia do tipo de dados com os quais voc√™ '
        'est√° lidando √© tra√ßar um histograma para cada atributo num√©rico. Um histograma mostra o n√∫mero '
        'de inst√¢ncias (no eixo vertical) que possuem um determinado intervalo de valores (no eixo '
        'horizontal). Voc√™ pode plotar esse atributo por vez ou chamar o m√©todo <b>hist()</b> em todo o '
        'conjunto de dados (como mostrado no exemplo de c√≥digo a seguir), e ele plotar√° um histograma '
        'para cada atributo num√©rico:</p>')
st.code('''import matplotlib.pyplot as plt

housing.hist(bins=50, figsize=(20, 15))
plt.show()''', line_numbers=True)
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_03.png',
         caption='Figura 2-3. Um histograma para cada atributo num√©rico.')
st.html('<p class="fonte_texto">Existem algumas coisas que voc√™ pode notar nesses histogramas:</p>')
st.html('<ol type="1" class="fonte_texto">'
            '<li>Primeiro, o atributo de renda mediana (<b>median_income</b>)n√£o parece ser expresso em '
            'd√≥lares americanos (USD). '
            'Depois de verificar com a equipe que coletou os dados, voc√™ ser√° informado de que os dados '
            'foram dimensionados e limitados a 15 (na verdade, 15,0001) para rendas medianas mais altas e a '
            '0,5 (na verdade, 0,4999) para rendas medianas mais baixas. Os n√∫meros representam '
            'aproximadamente dezenas de milhares de d√≥lares (por exemplo, 3 na verdade significa cerca de '
            'US$ 30.000). Trabalhar com atributos pr√©-processados √© comum em Aprendizado de M√°quina e n√£o √© '
            'necessariamente um problema, mas voc√™ deve tentar entender como os dados foram computados.</li>'
            '<li>A idade m√©dia da habita√ß√£o e o valor m√©dio da casa tamb√©m foram limitados. Este √∫ltimo '
            'pode ser um problema s√©rio, pois √© o seu atributo alvo (seus r√≥tulos). Seus algoritmos de '
            'aprendizado de m√°quina podem aprender que os pre√ßos nunca ultrapassam esse limite. Voc√™ '
            'precisa verificar com a equipe do seu cliente (a equipe que usar√° a sa√≠da do seu sistema) se '
            'isso √© um problema ou n√£o. Se eles lhe disserem que precisam de previs√µes precisas, mesmo '
            'al√©m de US$ 500.000, voc√™ ter√° duas op√ß√µes:</li>'
                '<ol type="a" class="fonte_texto">'
                    '<li>Colete r√≥tulos adequados para os distritos cujos r√≥tulos foram limitados.</li>'
                    '<li>Remova esses distritos do conjunto de treinamento (e tamb√©m do conjunto de testes, '
                    'pois seu sistema n√£o deve ser mal avaliado se prever valores acima de US$ 500.000).</li>'
                '</ol>'
            '<li>Esses atributos t√™m escalas muito diferentes. Discutiremos isso mais tarde neste cap√≠tulo, '
            'quando explorarmos o escalonamento de recursos.</li>'
            '<li>Finalmente, muitos histogramas t√™m uma <i>cauda pesada</i>: eles se estendem muito mais '
            'para a direita da mediana do que para a esquerda. Isso pode tornar um pouco mais dif√≠cil para '
            'alguns algoritmos de aprendizado de m√°quina detectar padr√µes. Tentaremos transformar esses '
            'atributos mais tarde para obter distribui√ß√µes mais em forma de sino.</li>'
        '</ol>')
st.html('<p class="fonte_texto">Esperamos que agora voc√™ compreenda melhor o tipo de dados com os quais '
        'est√° lidando.</p>')
with st.expander('Alerta 1', icon='‚ö°'):
    st.html('<p class="fonte_texto">Espere! Antes de examinar mais os dados, voc√™ precisa criar um conjunto '
            'de testes, coloc√°-lo de lado e nunca mais examin√°-lo.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Crie um conjunto de testes</h2>')
st.html('<p class="fonte_texto">Pode parecer estranho reservar voluntariamente parte dos dados nesta fase. '
        'Afinal, voc√™ apenas deu uma r√°pida olhada nos dados e certamente deveria aprender muito mais sobre '
        'eles antes de decidir quais algoritmos usar, certo? Isso √© verdade, mas seu c√©rebro √© um incr√≠vel '
        'sistema de detec√ß√£o de padr√µes, o que significa que √© altamente propenso a overfitting: se voc√™ '
        'olhar para o conjunto de testes, poder√° trope√ßar em algum padr√£o aparentemente interessante nos '
        'dados de teste que o levar√° a selecionar um tipo espec√≠fico de modelo de aprendizado de m√°quina. '
        'Ao estimar o erro de generaliza√ß√£o usando o conjunto de testes, sua estimativa ser√° muito '
        'otimista e voc√™ iniciar√° um sistema que n√£o funcionar√° t√£o bem quanto o esperado. Isso √© chamado '
        'de vi√©s de <i>rastreamento de dados</i>.</p>')
st.html('<p class="fonte_texto">Criar um conjunto de testes √© teoricamente simples: escolha algumas '
        'inst√¢ncias aleatoriamente, normalmente 20% do conjunto de dados (ou menos se o seu conjunto de '
        'dados for muito grande), e reserve-as:</p>')
st.code('''import numpy as np

def separacao_treino_teste(dados, quantidade_teste):
    indices_embaralhados = np.random.permutation(len(dados))
    tamanho_conjunto_teste = int(len(dados) * quantidade_teste)
    indices_teste = indices_embaralhados[:tamanho_conjunto_teste]
    indices_treino = indices_embaralhados[tamanho_conjunto_teste:]
    return dados.iloc[indices_treino], dados.iloc[indices_teste]''', line_numbers=True)
st.html('<p class="fonte_texto">Voc√™ pode ent√£o usar esta fun√ß√£o assim:</p>')
st.code('''conjunto_treino, conjunto_teste = separacao_treino_teste(housing, 0.2)
print(len(conjunto_treino))
print(len(conjunto_teste))''', line_numbers=True)
st.html('<p class="fonte_texto">Bem, isso funciona, mas n√£o √© perfeito: se voc√™ executar o programa '
        'novamente, ele ir√° gerar um conjunto de testes diferente! Com o tempo, voc√™ (ou seus algoritmos '
        'de aprendizado de m√°quina) conseguir√° ver todo o conjunto de dados, que √© o que voc√™ deseja '
        'evitar.</p>')
st.html('<p class="fonte_texto">Uma solu√ß√£o √© salvar o conjunto de testes na primeira execu√ß√£o e carreg√°-lo '
        'nas execu√ß√µes subsequentes. Outra op√ß√£o √© definir a semente do gerador de n√∫meros aleat√≥rios '
        '(por exemplo, com <b>np.random.seed(42)</b>) antes de chamar <b>np.random.permutation()</b> para '
        'que ele sempre gere os mesmos √≠ndices embaralhados.</p>')
st.html('<p class="fonte_texto">Mas ambas as solu√ß√µes ser√£o interrompidas na pr√≥xima vez que voc√™ buscar '
        'um conjunto de dados atualizado. Para ter uma divis√£o de treinamento/teste est√°vel mesmo ap√≥s a '
        'atualiza√ß√£o do conjunto de dados, uma solu√ß√£o comum √© usar o identificador de cada inst√¢ncia '
        'para decidir se deve ou n√£o entrar no conjunto de testes (assumindo que as inst√¢ncias tenham um '
        'identificador √∫nico e imut√°vel). Por exemplo, voc√™ poderia calcular um hash do identificador '
        'de cada inst√¢ncia e colocar essa inst√¢ncia no conjunto de teste se o hash for menor ou igual a '
        '20% do valor m√°ximo do hash. Isto garante que o conjunto de testes permanecer√° consistente em '
        'v√°rias execu√ß√µes, mesmo se voc√™ atualizar o conjunto de dados. O novo conjunto de testes '
        'conter√° 20% das novas inst√¢ncias, mas n√£o conter√° nenhuma inst√¢ncia que estivesse anteriormente '
        'no conjunto de treinamento. Aqui est√° uma poss√≠vel implementa√ß√£o:</p>')
st.code('''from zlib import crc32

def verificar_conjunto_teste(identificador, quantidade_teste):
    return crc32(np.int64(identificador)) & 0xffffffff < quantidade_teste * 2**32

def separacao_treino_teste_id(dados, quantidade_teste, id_coluna):
    ids = dados[id_coluna]
    no_conjunto_teste = ids.apply(lambda id_: verificar_conjunto_teste(id_, quantidade_teste))
    return dados.loc[~no_conjunto_teste], dados.loc[no_conjunto_teste]''', line_numbers=True)
st.html('<p class="fonte_texto">Infelizmente, o conjunto de dados habitacionais n√£o possui uma coluna de '
        'identificador. A solu√ß√£o mais simples √© usar o √≠ndice de linha como ID:</p>')
st.code('''housing_com_id = housing.reset_index()  # adicionar a coluna 'index'
conjunto_treino, conjunto_teste = separacao_treino_teste_id(housing_com_id, 0.2, 'index')''', line_numbers=True)
st.html('<p class="fonte_texto">Se voc√™ usar o √≠ndice de linha como um identificador exclusivo, precisar√° '
        'garantir que os novos dados sejam anexados ao final do conjunto de dados e que nenhuma linha seja '
        'exclu√≠da. Se isso n√£o for poss√≠vel, voc√™ pode tentar usar os recursos mais est√°veis para '
        'construir um identificador exclusivo. Por exemplo, a latitude e a longitude de um distrito s√£o '
        'garantidamente est√°veis por alguns milh√µes de anos, ent√£o voc√™ pode combin√°-las em um ID '
        'como este:</p>')
st.code('''housing_com_id['id'] = housing['longitude'] * 1000 + housing['latitude']
conjunto_treino, conjunto_teste = separacao_treino_teste_id(housing_com_id, 0.2, 'id')''', line_numbers=True)
st.html('<p class="fonte_texto">Scikit-Learn fornece algumas fun√ß√µes para dividir conjuntos de dados em '
        'v√°rios subconjuntos de v√°rias maneiras. A fun√ß√£o mais simples √© <b>train_test_split()</b>, que '
        'faz praticamente a mesma coisa que a fun√ß√£o <b>separacao_treino_teste()</b>, com alguns recursos '
        'adicionais. Primeiro, existe um par√¢metro <b>random_state</b> que permite definir a semente do '
        'gerador aleat√≥rio. Segundo, voc√™ pode passar v√°rios conjuntos de dados com um n√∫mero id√™ntico de '
        'linhas e dividi-los nos mesmos √≠ndices (isso √© muito √∫til, por exemplo, se voc√™ tiver um '
        'DataFrame separado para r√≥tulos):</p>')
st.code('''from sklearn.model_selection import train_test_split

conjunto_treino, conjunto_teste = train_test_split(housing, test_size=0.2, random_state=42)''', line_numbers=True)
st.html('<p class="fonte_texto">At√© agora consideramos m√©todos de amostragem puramente aleat√≥rios. '
        'Geralmente, isso √© bom se o seu conjunto de dados for grande o suficiente (especialmente em '
        'rela√ß√£o ao n√∫mero de atributos), mas se n√£o for, voc√™ corre o risco de introduzir um vi√©s de '
        'amostragem significativo. Quando uma empresa de pesquisas decide ligar para 1.000 pessoas para '
        'fazer algumas perguntas, ela n√£o escolhe apenas 1.000 pessoas aleatoriamente em uma lista '
        'telef√¥nica. Eles tentam garantir que estas 1.000 pessoas sejam representativas de toda a '
        'popula√ß√£o. Por exemplo, a popula√ß√£o dos EUA √© composta por 51,3% de mulheres e 48,7% de homens, '
        'pelo que um inqu√©rito bem conduzido nos EUA tentaria manter esta propor√ß√£o na amostra: 513 '
        'mulheres e 487 homens. Isso √© chamado de <i>amostragem estratificada</i>: a popula√ß√£o √© dividida '
        'em subgrupos homog√™neos chamados <i>estratos</i>, e o n√∫mero certo de inst√¢ncias √© amostrado de '
        'cada estrato para garantir que o conjunto de teste seja representativo da popula√ß√£o geral. Se as '
        'pessoas que realizam a pesquisa usassem uma amostragem puramente aleat√≥ria, haveria cerca de 12% '
        'de chance de amostrar um conjunto de testes distorcido que fosse menos de 49% de mulheres ou mais '
        'de 54% de mulheres. De qualquer forma, os resultados da pesquisa seriam significativamente '
        'tendenciosos.</p>')
st.html('<p class="fonte_texto">Suponha que voc√™ conversou com especialistas que lhe disseram que a renda '
        'm√©dia √© um atributo muito importante para prever os pre√ßos m√©dios da habita√ß√£o. Talvez voc√™ queira '
        'garantir que o conjunto de testes seja representativo das diversas categorias de renda em todo o '
        'conjunto de dados. Como a renda m√©dia √© um atributo num√©rico cont√≠nuo, primeiro √© necess√°rio '
        'criar um atributo de categoria de renda. Vejamos o histograma da renda m√©dia mais de perto (na '
        'Figura 2-3): a maioria dos valores da renda m√©dia est√£o agrupados em torno de 1,5 a 6 (ou seja, '
        'US$ 15.000 a US$ 60.000), mas algumas rendas m√©dias v√£o muito al√©m de 6. √â importante ter um '
        'n√∫mero suficiente de inst√¢ncias em seu conjunto de dados para cada estrato, caso contr√°rio, a '
        'estimativa da import√¢ncia de um estrato pode ser distorcida. Isso significa que voc√™ n√£o deve ter '
        'muitos estratos e cada estrato deve ser grande o suficiente. O c√≥digo a seguir usa a fun√ß√£o '
        '<b>pd.cut()</b> para criar um atributo de categoria de renda com cinco categorias (rotuladas de '
        '1 a 5): a categoria 1 varia de 0 a 1,5 (ou seja, menos de US$ 15.000), a categoria 2 de 1,5 a 3 e '
        'assim por diante:</p>')
st.code('''housing['cat_renda'] = pd.cut(housing['median_income'],
                              bins=[0.0, 1.5, 3.0, 4.5, 6.0, np.inf],
                              labels=[1, 2, 3, 4, 5])''', line_numbers=True)
st.html('<p class="fonte_texto">Estas categorias de rendimento est√£o representadas na Figura 2-4:</p>')
st.code("housing['cat_renda'].hist()", line_numbers=True)
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_04.png',
         caption='Figura 2-4. Histograma das categorias de renda.')
st.html('<p class="fonte_texto">Agora voc√™ est√° pronto para fazer uma amostragem estratificada com base '
        'na categoria de renda. Para isso voc√™ pode usar a classe <b>StratifiedShuffleSplit</b> do '
        'Scikit-Learn:</p>')
st.code('''from sklearn.model_selection import StratifiedShuffleSplit

slipt = StratifiedShuffleSplit(n_splits=1, test_size=0.2, random_state=42)
for treino_indice, teste_indice in slipt.split(housing, housing['cat_renda']):
    conjunto_treino_estratificado = housing.loc[treino_indice]
    conjunto_teste_estratificado = housing.loc[teste_indice]''', line_numbers=True)
st.html('<p class="fonte_texto">Vamos ver se funcionou conforme o esperado. Voc√™ pode come√ßar observando '
        'as propor√ß√µes das categorias de renda no conjunto de teste:</p>')
st.code("conjunto_teste_estratificado['cat_renda'].value_counts() / len(conjunto_teste_estratificado)", line_numbers=True)
tabela_2_5 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_5.csv')
st.dataframe(tabela_2_5, hide_index=True)
st.html('<p class="fonte_texto">Com um c√≥digo semelhante, voc√™ pode medir as propor√ß√µes das categorias de '
        'renda no conjunto de dados completo. A tabela abaixo compara as propor√ß√µes das categorias de '
        'rendimento no conjunto de dados global, no conjunto de testes gerado com amostragem estratificada '
        'e num conjunto de testes gerado utilizando amostragem puramente aleat√≥ria. Como voc√™ pode ver, o '
        'conjunto de testes gerado usando amostragem estratificada tem propor√ß√µes de categorias de renda '
        'quase id√™nticas √†s do conjunto de dados completo, enquanto o conjunto de testes gerado usando '
        'amostragem puramente aleat√≥ria √© distorcido.</p>')
tabela_2_6 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_6.csv')
st.dataframe(tabela_2_6, hide_index=True)
st.html('<p class="fonte_texto">Agora voc√™ deve remover o atributo <b>cat_renda</b> para que os dados '
        'voltem ao seu estado original:</p>')
st.code('''for conjunto in (conjunto_treino_estratificado, conjunto_teste_estratificado):
    conjunto.drop('cat_renda', axis=1, inplace=True)''', line_numbers=True)
st.html('<p class="fonte_texto">Passamos bastante tempo na gera√ß√£o de conjuntos de testes por um bom '
        'motivo: esta √© uma parte frequentemente negligenciada, mas cr√≠tica de um projeto de Aprendizado '
        'de M√°quina. Al√©m disso, muitas destas ideias ser√£o √∫teis mais tarde, quando discutirmos a '
        'valida√ß√£o cruzada. Agora √© hora de passar para a pr√≥xima etapa: explorar os dados.</p>')

# --- Descubra e visualize os dados para obter insights --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Descubra e visualize os dados para obter insights</h1>')
st.html('<p class="fonte_texto">At√© agora, voc√™ apenas deu uma r√°pida olhada nos dados para obter uma '
        'compreens√£o geral do tipo de dados que est√° manipulando. Agora o objetivo √© aprofundar um pouco '
        'mais.</p>')
st.html('<p class="fonte_texto">Primeiro, certifique-se de ter deixado o conjunto de teste de lado e de '
        'estar apenas explorando o conjunto de treinamento. Al√©m disso, se o conjunto de treinamento for '
        'muito grande, voc√™ pode querer experimentar um conjunto de explora√ß√£o, para tornar as '
        'manipula√ß√µes f√°ceis e r√°pidas. No nosso caso, o conjunto √© bem pequeno, ent√£o voc√™ pode '
        'trabalhar diretamente no conjunto completo. Vamos criar uma c√≥pia para que voc√™ possa brincar '
        'com ela sem prejudicar o conjunto de treinamento:</p>')
st.code('housing = conjunto_treino_estratificado.copy()', line_numbers=True)
st.html('<h2 class="fonte_subtitulo_aula">Visualizando Dados Geogr√°ficos</h2>')
st.html('<p class="fonte_texto">Como existe informa√ß√£o geogr√°fica (latitude e longitude), √© uma boa ideia '
        'criar um gr√°fico de dispers√£o de todos os distritos para visualizar os dados (Figura 2-5):</p>')
st.code("housing.plot(kind='scatter', x='longitude', y='latitude')", line_numbers=True)
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_05.png',
         caption='Figura 2-5. Um gr√°fico de dispers√£o geogr√°fica dos dados.')
st.html('<p class="fonte_texto">Parece a Calif√≥rnia, mas fora isso √© dif√≠cil ver qualquer padr√£o '
        'espec√≠fico. Definir a op√ß√£o <b>alpha</b> como <b>0.1</b> torna muito mais f√°cil visualizar os '
        'locais onde h√° uma alta densidade de pontos de dados (Figura 2-6):</p>')
st.code("housing.plot(kind='scatter', x='longitude', y='latitude', alpha='0.1')", line_numbers=True)
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_06.png',
         caption='Figura 2-6. Uma melhor visualiza√ß√£o que destaca √°reas de alta densidade.')
st.html('<p class="fonte_texto">Agora isso √© muito melhor: voc√™ pode ver claramente as √°reas de alta '
        'densidade, nomeadamente a Ba√≠a de S√£o Francisco e ao redor de Los Angeles e San Diego, al√©m de '
        'uma longa '
        'linha de densidade bastante alta no Vale Central, em particular em torno de Sacramento e '
        'Fresno.</p>')
st.html('<p class="fonte_texto">Nossos c√©rebros s√£o muito bons em detectar padr√µes em imagens, mas talvez '
        'seja necess√°rio brincar com os par√¢metros de visualiza√ß√£o para destacar os padr√µes.</p>')
st.html('<p class="fonte_texto">Agora vejamos os pre√ßos da habita√ß√£o (Figura 2-7). O raio de cada c√≠rculo '
        'representa a popula√ß√£o do distrito (par√¢metro <b>s</b>) e a cor representa o pre√ßo '
        '(par√¢metro <b>c</b>). '
        'Usaremos um mapa de cores pr√©-definido (par√¢metro <b>cmap</b>) chamado <b>jet</b>, que varia do '
        'azul '
        '(valores baixos) ao vermelho (pre√ßos altos):</p>')
st.code("""housing.plot(kind='scatter', x='longitude', y='latitude', alpha=0.4,
             s=housing['population']/100, label='Popula√ß√£o', figsize=(10, 7),
             c='median_house_value', cmap=plt.get_cmap('jet'), colorbar=True)
plt.legend()""", line_numbers=True)
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_07.png',
         caption='Figura 2-7. Pre√ßos da habita√ß√£o na Calif√≥rnia: vermelho √© caro, azul √© barato, c√≠rculos '
                 'maiores indicam √°reas com maior popula√ß√£o.')
st.html('<p class="fonte_texto">Esta imagem diz-lhe que os pre√ßos da habita√ß√£o est√£o muito relacionados '
        'com a localiza√ß√£o (por exemplo, perto do oceano) e com a densidade populacional, como '
        'provavelmente j√° sabia. Um algoritmo de agrupamento deve ser √∫til para detectar o cluster '
        'principal e adicionar novos recursos que medem a proximidade dos centros do cluster. O atributo '
        'de proximidade do oceano tamb√©m pode ser √∫til, embora no Norte da Calif√≥rnia os pre√ßos da '
        'habita√ß√£o nos distritos costeiros n√£o sejam demasiado elevados, ent√£o essa n√£o √© uma regra '
        'simples.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Procurando Correla√ß√µes</h2>')
st.html('<p class="fonte_texto">Como o conjunto de dados n√£o √© muito grande, voc√™ pode calcular facilmente '
        'o <i>coeficiente de correla√ß√£o padr√£o</i> (tamb√©m chamado de <i>r de Pearson</i>) entre cada par '
        'de atributos usando o m√©todo <b>corr()</b>:</p>')
st.code('matriz_corr = housing.corr(numeric_only=True)', line_numbers=True)
st.html('<p class="fonte_texto">Agora vamos ver o quanto cada atributo se correlaciona com o valor '
        'm√©dio da casa:</p>')
tabela_2_7 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_7.csv')
st.dataframe(tabela_2_7, hide_index=True)
st.html('<p class="fonte_texto">O coeficiente de correla√ß√£o varia de ‚Äì1 a 1. Quando est√° pr√≥ximo de 1, '
        'significa que existe uma forte correla√ß√£o positiva; por exemplo, o valor m√©dio da casa tende a '
        'subir quando o rendimento m√©dio aumenta. Quando o coeficiente est√° pr√≥ximo de ‚Äì1, significa que '
        'existe uma forte correla√ß√£o negativa; voc√™ pode ver uma pequena correla√ß√£o negativa entre a '
        'latitude e o valor m√©dio da casa (ou seja, os pre√ßos t√™m uma ligeira tend√™ncia de cair quando '
        'voc√™ vai para o norte). Finalmente, coeficientes pr√≥ximos de 0 significam que n√£o h√° correla√ß√£o '
        'linear. A Figura 2-8 mostra v√°rios gr√°ficos juntamente com o coeficiente de correla√ß√£o entre '
        'seus eixos horizontal e vertical.</p>')
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_08.png',
         caption='Figura 2-8. Coeficiente de correla√ß√£o padr√£o de v√°rios conjuntos de dados.')
with st.expander('Alerta 2', icon='‚ö°'):
    st.html('<p class="fonte_texto">O coeficiente de correla√ß√£o mede apenas correla√ß√µes lineares (‚Äúse '
            '<i>x</i> sobe, ent√£o <i>y</i> geralmente sobe/desce‚Äù). Pode perder completamente as rela√ß√µes '
            'n√£o lineares (por exemplo, ‚Äúse <i>x</i> estiver pr√≥ximo de 0, ent√£o <i>y</i> geralmente '
            'sobe‚Äù). Observe como todos os gr√°ficos da linha inferior t√™m um coeficiente de correla√ß√£o '
            'igual a 0, apesar do fato de seus eixos claramente n√£o serem independentes: estes s√£o '
            'exemplos de rela√ß√µes n√£o lineares. Al√©m disso, a segunda linha mostra exemplos onde o '
            'coeficiente de correla√ß√£o √© igual a 1 ou ‚Äì1; observe que isso n√£o tem nada a ver com a '
            'inclina√ß√£o. Por exemplo, sua altura em polegadas tem um coeficiente de correla√ß√£o de 1 com '
            'sua altura em p√©s ou em nan√¥metros.</p>')
st.html('<p class="fonte_texto">Outra maneira de verificar a correla√ß√£o entre atributos √© usar a fun√ß√£o '
        '<b>scatter_matrix()</b> do pandas, que plota cada atributo num√©rico em rela√ß√£o a todos os outros '
        'atributos num√©ricos. Como agora existem 11 atributos num√©ricos, voc√™ obteria 11<sup>2</sup> = 121 '
        'lotes, que n√£o caberiam em uma p√°gina ‚Äì ent√£o vamos nos concentrar apenas em alguns atributos '
        'promissores que parecem mais correlacionados com o valor m√©dio da habita√ß√£o (Figura 2-9):</p>')
st.code('''from pandas.plotting import scatter_matrix

atributos = [
    'median_house_value',
    'median_income',
    'total_rooms',
    'housing_median_age'
]
scatter_matrix(housing[atributos], figsize=(12, 8))''', line_numbers=True)
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_09.png',
         caption='Figura 2-9. Esta matriz de dispers√£o representa cada atributo num√©rico em rela√ß√£o a '
                 'todos os '
                 'outros atributos num√©ricos, al√©m de um histograma de cada atributo num√©rico.')
st.html('<p class="fonte_texto">A diagonal principal (do canto superior esquerdo ao canto inferior direito) '
        'estaria cheia de linhas retas se os pandas tra√ßassem cada vari√°vel contra si mesmo, o que n√£o '
        'seria muito √∫til. Ent√£o, em vez disso, o pandas exibe um histograma de cada atributo (outras '
        'op√ß√µes est√£o dispon√≠veis; consulte a documenta√ß√£o do pandas para obter mais detalhes).</p>')
st.html('<p class="fonte_texto">O atributo mais promissor para prever o valor m√©dio da casa √© a renda '
        'm√©dia, ent√£o vamos ampliar o gr√°fico de dispers√£o de correla√ß√£o (Figura 2-10):</p>')
st.code('''housing.plot(
    kind='scatter',
    x='median_income',
    y='median_house_value',
    alpha=0.1
)''', line_numbers=True)
st.image('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/figura_10.png',
         caption='Figura 2-10. Renda m√©dia vs valor m√©dio da casa.')
st.html('<p class="fonte_texto">Este gr√°fico revela algumas coisas. Primeiro, a correla√ß√£o √© de fato muito '
        'forte; voc√™ pode ver claramente a tend√™ncia ascendente e os pontos n√£o est√£o muito dispersos. Em '
        'segundo lugar, o limite de pre√ßo que observamos anteriormente √© claramente vis√≠vel como uma linha '
        'horizontal em US$ 500.000. Mas este gr√°fico revela outras linhas retas menos √≥bvias: uma linha '
        'horizontal em torno de US$ 450.000, outra em torno de US$ 350.000, talvez uma em torno de US$ '
        '280.000 e mais algumas abaixo disso. Voc√™ pode tentar remover os distritos correspondentes para '
        'evitar que seus algoritmos aprendam a reproduzir essas peculiaridades dos dados.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Experimentando combina√ß√µes de atributos</h2>')
st.html('<p class="fonte_texto">Esperamos que as se√ß√µes anteriores tenham dado uma ideia de algumas '
        'maneiras de explorar os dados e obter insights. Voc√™ identificou algumas peculiaridades dos dados '
        'que pode querer limpar antes de aliment√°-los em um algoritmo de aprendizado de m√°quina e '
        'encontrou correla√ß√µes interessantes entre atributos, em particular com o atributo de destino. '
        'Voc√™ tamb√©m notou que alguns atributos t√™m uma distribui√ß√£o com cauda pesada, ent√£o voc√™ pode '
        'querer transform√°-los (por exemplo, calculando seu logaritmo). √â claro que sua abordagem ir√° '
        'variar consideravelmente com cada projeto, mas as ideias gerais s√£o semelhantes.</p>')
st.html('<p class="fonte_texto">Uma √∫ltima coisa que voc√™ pode querer fazer antes de preparar os dados '
        'para algoritmos de aprendizado de m√°quina √© experimentar v√°rias combina√ß√µes de atributos. Por '
        'exemplo, o n√∫mero total de aposentos num distrito n√£o √© muito √∫til se n√£o soubermos quantos '
        'pessoas na casa existem. O que voc√™ realmente quer √© o n√∫mero de aposentos por fam√≠lia. Da '
        'mesma forma, o n√∫mero total de quartos por si s√≥ n√£o √© muito √∫til: voc√™ provavelmente desejar√° '
        'compar√°-lo com o n√∫mero de aposentos. E a popula√ß√£o pela quantidade de casas tamb√©m parece ser uma '
        'combina√ß√£o interessante de atributos a considerar. Vamos criar esses novos atributos:</p>')
st.code("""housing['aposentos_por_pessoa'] = housing['total_rooms'] / housing['households']
housing['quartos_por_aposento'] = housing['total_bedrooms'] / housing['total_rooms']
housing['pessoas_por_casa'] = housing['population'] / housing['households']""", line_numbers=True)
st.html('<p class="fonte_texto">E agora vamos dar uma olhada na matriz de correla√ß√£o novamente:</p>')
tabela_2_8 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_8.csv')
st.dataframe(tabela_2_8, hide_index=True)
st.html('<p class="fonte_texto">Ei, nada mal! O novo atributo <b>quartos_por_aposento</b> est√° muito mais '
        'correlacionado com o valor m√©dio da casa do que com o n√∫mero total de quartos ou aposentos. '
        'Aparentemente, casas com menor propor√ß√£o quarto/aposento tendem a ser mais caras. O n√∫mero de '
        'aposentos por casa tamb√©m √© mais informativo do que o n√∫mero total de divis√µes num '
        'distrito ‚Äì obviamente quanto maiores as casas, mais caras s√£o.</p>')
st.html('<p class="fonte_texto">Esta rodada de explora√ß√£o n√£o precisa ser absolutamente completa; o '
        'objetivo √© come√ßar com o p√© direito e obter rapidamente insights que o ajudar√£o a obter um '
        'primeiro prot√≥tipo razoavelmente bom. Mas este √© um processo iterativo: depois de colocar um '
        'prot√≥tipo em funcionamento, voc√™ pode analisar seu resultado para obter mais insights e voltar a '
        'esta etapa de explora√ß√£o. N√£o se esque√ßa de utilizar a fun√ß√£o <b>drop()</b> nessas colunas '
        'criadas para evitar erros. Vamos cri√°-las de outra forma.</p>')

# --- Prepare os dados para algoritmos de aprendizado de m√°quina --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Prepare os dados para algoritmos de aprendizado de m√°quina</h1>')
st.html('<p class="fonte_texto">√â hora de preparar os dados para seus algoritmos de Aprendizado de M√°quina. '
        'Em vez de fazer isso manualmente, voc√™ deve escrever fun√ß√µes para essa finalidade, por v√°rios bons '
        'motivos:</p>')
st.html('<ul class="fonte_texto">'
            '<li>Isso permitir√° que voc√™ reproduza essas transforma√ß√µes facilmente em qualquer conjunto de '
            'dados (por exemplo, na pr√≥xima vez que voc√™ obtiver um novo conjunto de dados).</li>'
            '<li>Voc√™ construir√° gradualmente uma biblioteca de fun√ß√µes de transforma√ß√£o que poder√° '
            'reutilizar em projetos futuros.</li>'
            '<li>Voc√™ pode usar essas fun√ß√µes em seu sistema ativo para transformar os novos dados antes de '
            'aliment√°-los em seus algoritmos.</li>'
            '<li>Isso permitir√° que voc√™ experimente facilmente v√°rias transforma√ß√µes e veja qual '
            'combina√ß√£o de transforma√ß√µes funciona melhor.</li>'
        '</ul>')
st.html('<p class="fonte_texto">Mas primeiro vamos voltar para um conjunto de treinamento limpo (copiando '
        '<b>conjunto_treino_estratificado</b> mais uma vez). Vamos tamb√©m separar os preditores e os '
        'r√≥tulos, j√° que n√£o queremos necessariamente aplicar as mesmas transforma√ß√µes aos preditores e '
        'aos valores alvo (observe que >b>drop()</b> cria uma c√≥pia dos dados e n√£o afeta o '
        '<b>conjunto_treino_estratificado</b>):</p>')
st.code("""housing = conjunto_treino_estratificado.drop('median_house_value', axis=1)
housing_rotulos = conjunto_treino_estratificado['median_house_value'].copy()""", line_numbers=True)
st.html('<h2 class="fonte_subtitulo_aula">Limpeza de dados</h2>')
st.html('<p class="fonte_texto">A maioria dos algoritmos de Aprendizado de M√°quina n√£o funcionam com '
        'recursos ausentes, ent√£o vamos criar algumas fun√ß√µes para cuidar deles. Vimos anteriormente que o '
        'atributo <b>total_bedrooms</b> possui alguns valores ausentes, ent√£o vamos corrigir isso. Voc√™ '
        'tem tr√™s op√ß√µes:</p>')
st.html('<ol type="1" class="fonte_texto">'
            '<li>Livre-se dos distritos correspondentes.</li>'
            '<li>Livre-se de todo o atributo.</li>'
            '<li>Defina os valores para algum valor (zero, m√©dia, mediana, etc.).</li>'
        '</ol>')
st.html('<p class="fonte_texto">Voc√™ pode fazer isso facilmente usando os m√©todos <b>dropna()</b>, '
        '<b>drop()</b> e <b>fillna()</b> do DataFrame:</p>')
st.code("""housing.dropna(subset=['total_bedrooms'])  # op√ß√£o 1
housing.drop('total_bedrooms', axis=1)  # op√ß√£o 2
mediana = housing['total_bedrooms'].median()  # op√ß√£o 3
housing['total_bedrooms'].fillna(mediana, inplace=True)""", line_numbers=True)
st.html('<p class="fonte_texto">Se voc√™ escolher a op√ß√£o 3, dever√° calcular o valor mediano no conjunto de '
        'treinamento e us√°-lo para preencher os valores ausentes no conjunto de treinamento. N√£o se '
        'esque√ßa de salvar o valor mediano que voc√™ calculou. Voc√™ precisar√° dele mais tarde para '
        'substituir valores ausentes no conjunto de testes quando quiser avaliar seu sistema e tamb√©m '
        'quando o sistema entrar em opera√ß√£o para substituir valores ausentes em novos dados.</p>')
st.html('<p class="fonte_texto">Scikit-Learn fornece uma classe √∫til para cuidar de valores ausentes: '
        '<b>SimpleImputer</b>. Aqui est√° como us√°-lo. Primeiro, voc√™ precisa criar uma inst√¢ncia de '
        '<b>SimpleImputer</b>, especificando que deseja substituir os valores ausentes de cada atributo '
        'pela mediana desse atributo:</p>')
st.code("""from sklearn.impute import SimpleImputer

imputer = SimpleImputer(strategy='median')""", line_numbers=True)
st.html('<p class="fonte_texto">Como a mediana s√≥ pode ser calculada em atributos num√©ricos, voc√™ precisa '
        'criar uma c√≥pia dos dados sem o atributo de texto <b>ocean_proximity</b>:</p>')
st.code("housing_num = housing.drop('ocean_proximity', axis=1)", line_numbers=True)
st.html('<p class="fonte_texto">Agora voc√™ pode chamar a inst√¢ncia <b>imputer</b> aos dados de treinamento '
        'usando o m√©todo <b>fit()</b>:</p>')
st.code('imputer.fit(housing_num)', line_numbers=True)
st.html('<p class="fonte_texto">O <b>imputer</b> simplesmente calculou a mediana de cada atributo e '
        'armazenou o resultado em sua vari√°vel de inst√¢ncia <b>statistics_</b>. Apenas o atributo '
        '<b>total_bedrooms</b> tinha valores faltantes, mas n√£o podemos ter certeza de que n√£o haver√° '
        'valores faltantes em novos dados ap√≥s o sistema entrar em opera√ß√£o, por isso √© mais seguro '
        'aplicar o <b>imputer</b> a todos os atributos num√©ricos:</p>')
st.code('''print(imputer.statistics_)
print(housing_num.median().values)''', line_numbers=True)
st.html('<p class="fonte_texto">Agora voc√™ pode usar este <b>imputer</b> ‚Äútreinado‚Äù para transformar o '
        'conjunto de treinamento substituindo os valores ausentes pelas medianas aprendidas:</p>')
st.code('X = imputer.transform(housing_num)', line_numbers=True)
st.html('<p class="fonte_texto">O resultado √© um array NumPy simples contendo os recursos transformados. '
        'Se voc√™ quiser coloc√°-lo de volta em um DataFrame do pandas, √© simples:</p>')
st.code("""housing_tr = pd.DataFrame(
    X,
    columns=housing_num.columns,
    index=housing_num.index
)""", line_numbers=True)
with st.expander('Desing do Scikit-Learn'):
    st.html('<p class="fonte_texto">A API do Scikit-Learn √© extremamente bem projetada. Estes s√£o os '
            '<a href="https://arxiv.org/abs/1309.0238">principais princ√≠pios de design</a>:</p>')
    st.html('<p class="fonte_texto"><i>Consist√™ncia</i>: Todos os objetos compartilham uma interface simples e '
            'consistente.</p>')
    st.html('<p class="fonte_texto"><i>Estimadores</i>: qualquer objeto que possa estimar alguns par√¢metros '
            'com base em um conjunto de dados √© chamado de <i>estimador</i> (por exemplo, um '
            '<b>imputer</b> √© um estimador). A estimativa em si √© realizada pelo m√©todo <b>fit()</b> e leva '
            'apenas um conjunto de dados como par√¢metro (ou dois para algoritmos de aprendizagem '
            'supervisionada; o segundo conjunto de dados cont√©m os r√≥tulos). Qualquer outro par√¢metro '
            'necess√°rio para orientar o processo de estimativa √© considerado um hiperpar√¢metro (como uma '
            '<b>estrat√©gia do imputer</b>) e deve ser definido como uma vari√°vel de inst√¢ncia (geralmente '
            'por meio de um par√¢metro construtor).</p>')
    st.html('<p class="fonte_texto"><i>Transformadores</i>: Alguns estimadores (como um <b>imputer</b>) tamb√©m '
            'podem transformar um conjunto de dados; estes s√£o chamados de <i>transformadores</i>. Mais uma '
            'vez, a API √© simples: a transforma√ß√£o √© realizada pelo m√©todo <b>transform()</b> com o '
            'conjunto de dados a ser transformado como par√¢metro. Ele retorna o conjunto de dados '
            'transformado. Esta transforma√ß√£o geralmente depende dos par√¢metros aprendidos, como √© o caso '
            'de um <b>imputer</b>. Todos os transformadores tamb√©m possuem um m√©todo de conveni√™ncia chamado '
            '<b>fit_transform()</b> que √© equivalente a chamar <b>fit()</b> e depois <b>transform()</b> '
            '(mas √†s vezes <b>fit_transform()</b> √© otimizado e roda muito mais r√°pido).</p>')
    st.html('<p class="fonte_texto"><i>Preditores</i>: Finalmente, alguns estimadores, dado um conjunto de '
            'dados, s√£o capazes de fazer previs√µes; eles s√£o chamados de <i>preditores</i>. Por exemplo, o '
            'modelo <b>LinearRegression</b> do <a href="https://mundopython.streamlit.app/aula_01_ia_scikit_learn_keras_tensorflow">cap√≠tulo anterior</a> era um preditor: dado o PIB per capita de '
            'um pa√≠s, previa a satisfa√ß√£o com a vida. Um preditor possui um m√©todo <b>predict()</b> que '
            'pega um conjunto de dados de novas inst√¢ncias e retorna um conjunto de dados de previs√µes '
            'correspondentes. Tamb√©m possui um m√©todo <b>score()</b> que mede a qualidade das previs√µes, '
            'dado um conjunto de testes (e os r√≥tulos correspondentes, no caso de algoritmos de '
            'aprendizagem supervisionada).</p>')
    st.html('<p class="fonte_texto"><i>Inspe√ß√£o</i>: todos os hiperpar√¢metros do estimador s√£o acess√≠veis '
            'diretamente por meio de vari√°veis de inst√¢ncia p√∫blicas (por exemplo, <b>imputer.strategy</b>) '
            'e todos os par√¢metros aprendidos pelo estimador s√£o acess√≠veis por meio de vari√°veis de '
            'inst√¢ncia p√∫blicas com um sufixo de sublinhado (por exemplo, <b>imputer.statistics_</b>).</p>')
    st.html('<p class="fonte_texto"><i>N√£o prolifera√ß√£o de classes</i>: os conjuntos de dados s√£o '
            'representados como matrizes NumPy ou matrizes esparsas SciPy, em vez de classes Python. '
            'Hiperpar√¢metros s√£o apenas strings ou n√∫meros regulares do Python.</p>')
    st.html('<p class="fonte_texto"><i>Composi√ß√£o</i>: os blocos de constru√ß√£o existentes s√£o reutilizados '
            'tanto quanto poss√≠vel. Por exemplo, √© f√°cil criar um estimador <b>Pipeline</b> a partir de '
            'uma sequ√™ncia arbitr√°ria de transformadores seguida por um estimador final, como veremos.</p>')
    st.html('<p class="fonte_texto"><i>Padr√µes sensatos</i>: o Scikit-Learn fornece valores padr√£o razo√°veis '
            'para a maioria dos par√¢metros, facilitando a cria√ß√£o r√°pida de um sistema funcional de linha '
            'de base.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Tratamento de texto e atributos categ√≥ricos</h2>')
st.html('<p class="fonte_texto">At√© agora lidamos apenas com atributos num√©ricos, mas agora vamos dar uma '
        'olhada nos atributos de texto. Neste conjunto de dados, existe apenas um: o atributo '
        '<b>ocean_proximity</b>. Vejamos seu valor para as primeiras 10 inst√¢ncias:</p>')
st.code("""housing_cat = housing[['ocean_proximity']]
housing_cat.head(10)""", line_numbers=True)
tabela_2_9 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_9.csv')
st.dataframe(tabela_2_9, hide_index=True)
st.html('<p class="fonte_texto">N√£o √© um texto arbitr√°rio: h√° um n√∫mero limitado de valores poss√≠veis, '
        'cada um dos quais representa uma categoria. Portanto, este atributo √© um atributo categ√≥rico. A '
        'maioria dos algoritmos de aprendizado de m√°quina prefere trabalhar com n√∫meros, ent√£o vamos '
        'converter essas categorias de texto em n√∫meros. Para isso, podemos usar a classe '
        '<b>OrdinalEncoder</b> do Scikit-Learn:</p>')
st.code('''from sklearn.preprocessing import OrdinalEncoder

codificador = OrdinalEncoder()
housing_cat_codificado = codificador.fit_transform(housing_cat)
housing_cat_codificado[:10]''', line_numbers=True)
st.html('<p class="fonte_texto">Voc√™ pode obter a lista de categorias usando a vari√°vel de inst√¢ncia '
        '<b>categories_</b>. √â uma lista contendo um array 1D de categorias para cada atributo categ√≥rico '
        '(neste caso, uma lista contendo um √∫nico array, pois existe apenas um atributo categ√≥rico):</p>')
st.code('codificador.categories_', line_numbers=True)
st.html('<p class="fonte_texto">Um problema com esta representa√ß√£o √© que os algoritmos de AM assumir√£o que '
        'dois valores pr√≥ximos s√£o mais semelhantes do que dois valores distantes. Isso pode ser bom em '
        'alguns casos (por exemplo, para categorias ordenadas como ‚Äúruim‚Äù, ‚Äúm√©dio‚Äù, ‚Äúbom‚Äù e ‚Äúexcelente‚Äù), '
        'mas obviamente n√£o √© o caso da coluna <b>ocean_proximity</b> (por exemplo, as categorias 0 e 4 s√£o '
        'claramente mais semelhantes que as categorias 0 e 1). Para corrigir esse problema, uma solu√ß√£o '
        'comum √© criar um atributo bin√°rio por categoria: um atributo igual a 1 quando a categoria for '
        '‚Äú<1H OCEAN‚Äù (e 0 caso contr√°rio), outro atributo igual a 1 quando a categoria for ‚ÄúINLAND‚Äù (e '
        '0 caso contr√°rio), e assim por diante. Isso √© chamado de <i>codifica√ß√£o one-hot</i>, porque '
        'apenas um atributo ser√° igual a 1 (quente), enquanto os outros ser√£o 0 (frio). Os novos atributos '
        '√†s vezes s√£o chamados de atributos <i>fict√≠cios</i>. Scikit-Learn fornece uma classe '
        '<b>OneHotEncoder</b> para converter valores categ√≥ricos em vetores one-hot:</p>')
st.code('''from sklearn.preprocessing import OneHotEncoder

codificador = OneHotEncoder()
housing_cat_1_hot = codificador.fit_transform(housing_cat)
housing_cat_1_hot''', line_numbers=True)
st.html('<p class="fonte_texto">Observe que a sa√≠da √© uma <i>matriz esparsa</i> do SciPy, em vez de um '
        'array NumPy. Isto √© muito √∫til quando voc√™ possui atributos categ√≥ricos com milhares de '
        'categorias. Ap√≥s a codifica√ß√£o onehot, obtemos uma matriz com milhares de colunas, e a matriz '
        'est√° cheia de 0s, exceto um √∫nico 1 por linha. Usar toneladas de mem√≥ria principalmente para '
        'armazenar zeros seria um grande desperd√≠cio; portanto, uma matriz esparsa armazena apenas a '
        'localiza√ß√£o dos elementos diferentes de zero. Voc√™ pode us√°-lo principalmente como um array 2D '
        'normal, mas se voc√™ realmente quiser convert√™-lo em um array NumPy (denso), basta chamar o '
        'm√©todo <b>toarray()</b>:</p>')
st.code('housing_cat_1_hot.toarray()', line_numbers=True)
st.html('<p class="fonte_texto">Mais uma vez, voc√™ pode obter a lista de categorias usando a vari√°vel de '
        'inst√¢ncia <b>categories_<b/> do codificador:</p>')
st.code('codificador.categories_', line_numbers=True)
with st.expander('Dica 3', icon='üí°'):
    st.html('<p class="fonte_texto">Se um atributo categ√≥rico tiver um grande n√∫mero de categorias poss√≠veis '
            '(por exemplo, c√≥digo do pa√≠s, profiss√£o, esp√©cie), ent√£o a codifica√ß√£o one-hot resultar√° em um '
            'grande n√∫mero de recursos de entrada. Isso pode retardar o treinamento e degradar o desempenho. '
            'Se isso acontecer, voc√™ pode querer substituir a entrada categ√≥rica por recursos num√©ricos '
            '√∫teis relacionados √†s categorias: por exemplo, voc√™ pode substituir o recurso '
            '<b>ocean_proximity</b> pela dist√¢ncia at√© o oceano (da mesma forma, um c√≥digo de pa√≠s pode ser '
            'substitu√≠do pela popula√ß√£o do pa√≠s e pelo PIB per capita). Alternativamente, voc√™ pode '
            'substituir cada categoria por um vetor de baixa dimens√£o que pode ser aprendido chamado '
            '<i>incorpora√ß√£o</i>. A representa√ß√£o de cada categoria seria aprendida durante o treinamento. '
            'Este √© um exemplo de aprendizagem de <i>representa√ß√£o</i> (veja os Cap√≠tulos 13 e 17 para mais '
            'detalhes).</p>')
st.html('<h2 class="fonte_subtitulo_aula">Transformadores personalizados</h2>')
st.html('<p class="fonte_texto">Embora o Scikit-Learn forne√ßa muitos transformadores √∫teis, voc√™ precisar√° '
        'escrever os seus pr√≥prios para tarefas como opera√ß√µes de limpeza personalizadas ou combina√ß√£o de '
        'atributos espec√≠ficos. Voc√™ desejar√° que seu transformador funcione perfeitamente com as '
        'funcionalidades do Scikit-Learn (como pipelines) e, como o Scikit-Learn depende da digita√ß√£o duck '
        '(n√£o da heran√ßa), tudo o que voc√™ precisa fazer √© criar uma classe e implementar tr√™s m√©todos: '
        '<b>fit()</b> (retornando <b>self</b>), <b>transform()</b> e <b>fit_transform()</b>.</p>')
st.html('<p class="fonte_texto">Voc√™ pode obter o √∫ltimo simplesmente adicionando '
        '<b>TransformerMixin</b> como classe base. Se voc√™ adicionar <b>BaseEstimator</b> como uma classe '
        'base (e evitar <b>*args</b> e <b>**kwargs</b> em seu construtor), voc√™ tamb√©m obter√° dois m√©todos '
        'extras (<b>get_params()</b> e <b>set_params()</b>) que ser√£o √∫teis para ajuste autom√°tico de '
        'hiperpar√¢metros. Por exemplo, aqui est√° uma pequena classe de transformador que adiciona os '
        'atributos combinados que discutimos anteriormente:</p>')
st.code('''
from sklearn.base import BaseEstimator, TransformerMixin

aposentos_ix, quartos_ix, populacao_ix, casas_ix = 3, 4, 5, 6

class AdicionadorAtributosCombinados(BaseEstimator, TransformerMixin):
  def __init__(self, add_quartos_por_aposento=True):
    self.add_quartos_por_aposento = add_quartos_por_aposento
  
  def fit(self, X, y=None):
    return self

  def transform(self, X):
    aposentos_por_casa = X[:, aposentos_ix] / X[:, casas_ix]
    populacao_por_casa = X[:, populacao_ix] / X[:, casas_ix]
    if self.add_quartos_por_aposento:
      quartos_por_aposento = X[:, quartos_ix] / X[:, aposentos_ix]
      return np.c_[X, aposentos_por_casa, populacao_por_casa, quartos_por_aposento]
    else:
      return np.c_[X, aposentos_por_casa, populacao_por_casa]

adicionador_atributo = AdicionadorAtributosCombinados(add_quartos_por_aposento=False)
housing_atributos_extra = adicionador_atributo.transform(housing.values)''', line_numbers=True)
st.html('<p class="fonte_texto">Neste exemplo, o transformador tem um hiperpar√¢metro, '
        '<b>add_quartos_por_aposento</b>, definido como <b>True</b> por padr√£o (muitas vezes √© √∫til '
        'fornecer padr√µes sensatos). Este hiperpar√¢metro permitir√° que voc√™ descubra facilmente se '
        'adicionar este atributo ajuda os algoritmos de aprendizado de m√°quina ou n√£o. De maneira mais '
        'geral, voc√™ pode adicionar um hiperpar√¢metro para controlar qualquer etapa de prepara√ß√£o de dados '
        'sobre a qual n√£o tenha 100% de certeza. Quanto mais voc√™ automatizar essas etapas de prepara√ß√£o '
        'de dados, mais combina√ß√µes poder√° experimentar automaticamente, aumentando a probabilidade de '
        'encontrar uma √≥tima combina√ß√£o (e economizando muito tempo).</p>')
st.html('<h2 class="fonte_subtitulo_aula">Dimensionamento de recursos</h2>')
st.html('<p class="fonte_texto">Uma das transforma√ß√µes mais importantes que voc√™ precisa aplicar aos seus '
        'dados √© o <b>escalonamento de recursos</b>. Com poucas exce√ß√µes, os algoritmos de Aprendizado '
        'de M√°quina n√£o funcionam bem quando os atributos num√©ricos de entrada t√™m escalas muito '
        'diferentes. Este √© o caso dos dados de habita√ß√£o: o n√∫mero total de quartos varia entre cerca de '
        '6 e 39.320, enquanto os rendimentos medianos variam apenas entre 0 e 15. Note-se que geralmente '
        'n√£o √© necess√°rio dimensionar os valores-alvo.</p>')
st.html('<p class="fonte_texto">Existem duas maneiras comuns de fazer com que todos os atributos tenham a '
        'mesma escala: <i>escala min-max</i> e <i>padroniza√ß√£o</i>.</p>')
st.html('<p class="fonte_texto">A escala m√≠nimo-m√°ximo (muitas pessoas chamam isso de <i>normaliza√ß√£o</i>) '
        '√© a mais simples: os valores s√£o deslocados e redimensionados para que acabem variando de 0 a 1. '
        'Fazemos isso subtraindo o valor m√≠nimo e dividindo pelo m√°ximo menos o m√≠nimo. Scikit-Learn '
        'fornece um transformador chamado <b>MinMaxScaler</b> para isso. Ele possui um hiperpar√¢metro '
        '<b>feature_range</b> que permite alterar o intervalo se, por algum motivo, voc√™ n√£o quiser '
        '0‚Äì1.</p>')
st.html('<p class="fonte_texto">A padroniza√ß√£o √© diferente: primeiro ela subtrai o valor m√©dio (para que '
        'os valores padronizados sempre tenham m√©dia zero) e depois divide pelo desvio padr√£o para que a '
        'distribui√ß√£o resultante tenha vari√¢ncia unit√°ria. Ao contr√°rio da escala min-max, a padroniza√ß√£o '
        'n√£o vincula os valores a um intervalo espec√≠fico, o que pode ser um problema para alguns '
        'algoritmos (por exemplo, redes neurais geralmente esperam um valor de entrada variando de 0 a '
        '1). No entanto, a padroniza√ß√£o √© muito menos afetada por valores discrepantes. Por exemplo, '
        'suponhamos que um distrito tivesse um rendimento m√©dio igual a 100 (por engano). A escala '
        'm√≠nimo-m√°ximo esmagaria todos os outros valores de 0‚Äì15 at√© 0‚Äì0.15, enquanto a padroniza√ß√£o n√£o '
        'seria muito afetada. Scikit-Learn fornece um transformador chamado <b>StandardScaler</b> para '
        'padroniza√ß√£o.</p>')
with st.expander('Alerta 3', icon='‚ö°'):
    st.html('<p class="fonte_texto">Tal como acontece com todas as transforma√ß√µes, √© importante ajustar os '
            'escalonadores apenas aos dados de treinamento, n√£o ao conjunto de dados completo (incluindo o '
            'conjunto de teste). S√≥ ent√£o voc√™ poder√° us√°-los para transformar o conjunto de treinamento e '
            'o conjunto de testes (e novos dados).</p>')
st.html('<h2 class="fonte_subtitulo_aula">Pipelines de transforma√ß√£o</h2>')
st.html('<p class="fonte_texto">Como voc√™ pode ver, h√° muitas etapas de transforma√ß√£o de dados que '
        'precisam ser executadas na ordem correta. Felizmente, o Scikit-Learn fornece a classe '
        '<b>Pipeline</b> para ajudar com essas sequ√™ncias de transforma√ß√µes. Aqui est√° um pequeno pipeline '
        'para os atributos num√©ricos:</p>')
st.code("""
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import StandardScaler

num_pipeline = Pipeline([
    ('imputer', SimpleImputer(strategy='median')),
    ('adicionador_atributos', AdicionadorAtributosCombinados()),
    ('padronizacao', StandardScaler())
])

housing_num_tr = num_pipeline.fit_transform(housing_num)""", line_numbers=True)
st.html('<p class="fonte_texto">O construtor <b>Pipeline</b> pega uma lista de pares nome/estimador que '
        'definem uma sequ√™ncia de etapas. Todos, exceto o √∫ltimo estimador, devem ser transformadores (ou '
        'seja, eles devem ter um m√©todo <b>fit_transform()</b>). Os nomes podem ser qualquer coisa que '
        'voc√™ quiser (desde que sejam √∫nicos e n√£o contenham sublinhados duplos, <b>__</b>); eles ser√£o '
        '√∫teis posteriormente para ajuste de hiperpar√¢metros.</p>')
st.html('<p class="fonte_texto">Quando voc√™ chama o m√©todo <b>fit()</b> do pipeline, ele chama '
        '<b>fit_transform()</b> sequencialmente em todos os transformadores, passando a sa√≠da de cada '
        'chamada como par√¢metro para a pr√≥xima chamada at√© atingir o estimador final, para o qual chama o '
        'm√©todo <b>fit()</b>.</p>')
st.html('<p class="fonte_texto">O pipeline exp√µe os mesmos m√©todos do estimador final. Neste exemplo, o '
        '√∫ltimo estimador √© um <b>StandardScaler</b>, que √© um transformador, ent√£o o pipeline tem um '
        'm√©todo <b>transform()</b> que aplica todas as transforma√ß√µes aos dados em sequ√™ncia (e, claro, '
        'tamb√©m um m√©todo <b>fit_transform()</b>, que √© o que usamos).</p>')
st.html('<p class="fonte_texto">At√© agora, tratamos as colunas categ√≥ricas e as colunas num√©ricas '
        'separadamente. Seria mais conveniente ter um √∫nico transformador capaz de lidar com todas as '
        'colunas, aplicando as transforma√ß√µes apropriadas a cada coluna. Na vers√£o 0.20, o Scikit-Learn '
        'introduziu o <b>ColumnTransformer</b> para esse prop√≥sito, e a boa not√≠cia √© que ele funciona '
        'muito bem com DataFrames do pandas. Vamos us√°-lo para aplicar todas as transforma√ß√µes aos dados '
        'habitacionais:</p>')
st.code("""from sklearn.compose import ColumnTransformer

num_atributos = list(housing_num)
cat_atributos = ['ocean_proximity']

pipeline_completo = ColumnTransformer([
    ('num', num_pipeline, num_atributos),
    ('cat', OneHotEncoder(), cat_atributos)
])

housing_preparado = pipeline_completo.fit_transform(housing)""", line_numbers=True)
st.html('<p class="fonte_texto">Primeiro importamos a classe <b>ColumnTransformer</b>, em seguida obtemos '
        'a lista de nomes de colunas num√©ricas e a lista de nomes de colunas categ√≥ricas, e ent√£o '
        'constru√≠mos um <b>ColumnTransformer</b>. O construtor requer uma lista de tuplas, onde cada tupla '
        'cont√©m um nome, um transformador e uma lista de nomes (ou √≠ndices) de colunas √†s quais o '
        'transformador deve ser aplicado. Neste exemplo, especificamos que as colunas num√©ricas devem ser '
        'transformadas usando o <b>num_pipeline</b> que definimos anteriormente, e as colunas categ√≥ricas '
        'devem ser transformadas usando um <b>OneHotEncoder</b>. Finalmente, aplicamos este '
        '<b>ColumnTransformer</b> aos dados: ele aplica cada transformador √†s colunas '
        'apropriadas e concatena as sa√≠das ao longo do segundo eixo (os transformadores devem retornar o '
        'mesmo n√∫mero de linhas).</p>')
st.html('<p class="fonte_texto">Observe que o <b>OneHotEncoder</b> retorna uma matriz esparsa, enquanto '
        'o <b>num_pipeline</b> retorna uma matriz densa. Quando existe uma mistura de matrizes esparsas e '
        'densas, o <b>ColumnTransformer</b> estima a densidade da matriz final (ou seja, a propor√ß√£o de '
        'c√©lulas diferentes de zero) e retorna uma matriz esparsa se a densidade for inferior a um '
        'determinado limite (por padr√£o, <b>sparse_threshold=0.3</b>). Neste exemplo, ele retorna uma '
        'matriz densa. E √© isso! Temos um pipeline de pr√©-processamento que pega todos os dados da '
        'habita√ß√£o e aplica as transforma√ß√µes apropriadas a cada coluna.</p>')
with st.expander('Dica 4', icon='üí°'):
    st.html('<p class="fonte_texto">Em vez de usar um transformador, voc√™ pode especificar a string '
            '"<b>drop</b>" se quiser que as colunas sejam descartadas ou pode especificar '
            '"<b>passthrough</b>" se quiser que as colunas permane√ßam intactas. Por padr√£o, as colunas '
            'restantes (ou seja, aquelas que n√£o foram listadas) ser√£o eliminadas, mas voc√™ pode definir o '
            'hiperpar√¢metro restante para qualquer transformador (ou para "<b>passthrough</b>") se desejar '
            'que essas colunas sejam tratadas de maneira diferente.</p>')
st.html('<p class="fonte_texto">Se voc√™ estiver usando o Scikit-Learn 0.19 ou anterior, poder√° usar uma '
        'biblioteca de terceiros, como <b>sklearn-pandas</b>, ou poder√° implementar seu pr√≥prio '
        'transformador personalizado para obter a mesma funcionalidade do <b>ColumnTransformer</b>. '
        'Alternativamente, voc√™ pode usar a classe <b>FeatureUnion</b>, que pode aplicar diferentes '
        'transformadores e concatenar suas sa√≠das. Mas n√£o √© poss√≠vel especificar colunas diferentes para '
        'cada transformador; todos eles se aplicam a todos os dados. √â poss√≠vel contornar esta limita√ß√£o '
        'usando um transformador personalizado para sele√ß√£o de coluna.</p>')

# --- Selecione e treine um modelo --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Selecione e treine um modelo</h1>')
st.html('<p class="fonte_texto">Estamos quase no final! Voc√™ estruturou o problema, obteve os dados e os '
        'explorou, '
        'amostrou um conjunto de treinamento e um conjunto de testes e escreveu pipelines de transforma√ß√£o '
        'para limpar e preparar seus dados para algoritmos de aprendizado de m√°quina automaticamente. '
        'Agora voc√™ est√° pronto para selecionar e treinar um modelo de Aprendizado de M√°quina.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Treinamento e avalia√ß√£o no conjunto de treinamento</h2>')
st.html('<p class="fonte_texto">A boa not√≠cia √© que gra√ßas a todas essas etapas anteriores, as coisas '
        'agora ser√£o muito mais simples do que voc√™ imagina. Vamos primeiro treinar um modelo de '
        'Regress√£o Linear, como fizemos no <a href="https://mundopython.streamlit.app/aula_01_ia_scikit_learn_keras_tensorflow">cap√≠tulo anterior</a>:</p>')
st.code('''from sklearn.linear_model import LinearRegression

reg_lin = LinearRegression()
reg_lin.fit(housing_preparado, housing_rotulos)''', line_numbers=True)
st.html('<p class="fonte_texto">Feito! Agora voc√™ tem um modelo de regress√£o linear funcional. Vamos '
        'experimentar algumas inst√¢ncias do conjunto de treinamento:</p>')
st.code('''
alguns_dados = housing.iloc[:5]
alguns_rotulos = housing_rotulos.iloc[:5]
alguns_dados_preparados = pipeline_completo.transform(alguns_dados)
print(f'Predi√ß√µes: {reg_lin.predict(alguns_dados_preparados)}')
print(f'R√≥tulos: {list(alguns_rotulos)}')''', line_numbers=True)
st.html('<p class="fonte_texto">Funciona, embora as previs√µes n√£o sejam exatamente precisas. Vamos medir '
        'o REQM deste modelo de regress√£o em todo o conjunto de treinamento usando a fun√ß√£o '
        '<b>mean_squared_error()</b> do Scikit-Learn:</p>')
st.code('''from sklearn.metrics import mean_squared_error

housing_predicoes = reg_lin.predict(housing_preparado)
reg_eqm = mean_squared_error(housing_rotulos, housing_predicoes)
reg_reqm = np.sqrt(reg_eqm)
print(reg_reqm)''', line_numbers=True)
st.html('<p class="fonte_texto">Isto √© melhor do que nada, mas claramente n√£o √© uma grande pontua√ß√£o: os '
        '<b>median_housing_values</b> da maioria dos distritos variam entre US$ 120.000 e US$ '
        '265.000, portanto, um erro de previs√£o t√≠pico de US$ 68.627 n√£o √© muito satisfat√≥rio (para voc√™ '
        'pode dar um valor pr√≥ximo). Este √© um exemplo de modelo que n√£o se adapta aos dados de '
        'treinamento. Quando isso acontece, pode significar que os recursos n√£o fornecem informa√ß√µes '
        'suficientes para fazer boas previs√µes ou que o modelo n√£o √© poderoso o suficiente. Como vimos '
        'no <a href="https://mundopython.streamlit.app/aula_01_ia_scikit_learn_keras_tensorflow">cap√≠tulo '
        'anterior</a>, as principais formas de corrigir o underfitting s√£o '
        'selecionar um modelo '
        'mais poderoso, alimentar o algoritmo de treinamento com melhores recursos ou reduzir as '
        'restri√ß√µes do modelo. Este modelo n√£o est√° regularizado, o que exclui a √∫ltima op√ß√£o. Voc√™ '
        'poderia tentar adicionar mais recursos (por exemplo, o logaritmo da popula√ß√£o), mas primeiro '
        'vamos tentar um modelo mais complexo para ver como funciona.</p>')
st.html('<p class="fonte_texto">Vamos treinar um <b>DecisionTreeRegressor</b>. Este √© um modelo poderoso, '
        'capaz de encontrar rela√ß√µes n√£o lineares complexas nos dados (√Årvores de Decis√£o s√£o apresentadas '
        'com mais detalhes no Cap√≠tulo 6). O c√≥digo j√° deve parecer familiar:</p>')
st.code('''from sklearn.tree import DecisionTreeRegressor

arv_dec = DecisionTreeRegressor()
arv_dec.fit(housing_preparado, housing_rotulos)''', line_numbers=True)
st.html('<p class="fonte_texto">Agora que o modelo est√° treinado, vamos avali√°-lo no conjunto de '
        'treinamento:</p>')
st.code('''housing_predicoes = arv_dec.predict(housing_preparado)
arv_dec_eqm = mean_squared_error(housing_rotulos, housing_predicoes)
arv_dec_reqm = np.sqrt(arv_dec_eqm)
print(arv_dec_reqm)''', line_numbers=True)
st.html('<p class="fonte_texto">Espere, o que!? Nenhum erro? Este modelo poderia realmente ser '
        'absolutamente perfeito? √â claro que √© muito mais prov√°vel que o modelo tenha superajustado os '
        'dados. Como voc√™ pode ter certeza? Como vimos anteriormente, voc√™ n√£o quer mexer no conjunto de '
        'teste at√© estar pronto para lan√ßar um modelo no qual tenha confian√ßa, ent√£o voc√™ precisa usar '
        'parte do conjunto de treinamento para treinamento e parte dele para valida√ß√£o do modelo.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Melhor avalia√ß√£o usando valida√ß√£o cruzada</h2>')
st.html('<p class="fonte_texto">Uma maneira de avaliar o modelo de √°rvore de decis√£o seria usar a fun√ß√£o '
        '<b>train_test_split()</b> para dividir o conjunto de treinamento em um conjunto de treinamento '
        'menor e um conjunto de valida√ß√£o, depois treinar seus modelos em rela√ß√£o ao conjunto de '
        'treinamento menor e avali√°-los em rela√ß√£o ao conjunto de valida√ß√£o. D√° um pouco de trabalho, mas '
        'nada muito dif√≠cil, e funcionaria bastante bem.</p>')
st.html('<p class="fonte_texto">Uma √≥tima alternativa √© usar o recurso <i>K-fold cross-validation</i> do '
        'Scikit-Learn. O c√≥digo a seguir divide aleatoriamente o conjunto de treinamento em 10 '
        'subconjuntos distintos chamados <i>folds</i> (dobras), depois treina e avalia o modelo de √°rvore de '
        'decis√£o 10 vezes, escolhendo uma dobra diferente para avalia√ß√£o a cada vez e treinando nas '
        'outras 9 dobras. O resultado √© uma matriz contendo as 10 pontua√ß√µes da avalia√ß√£o:</p>')
st.code("""from sklearn.model_selection import cross_val_score

pontuacoes = cross_val_score(
    arv_dec,
    housing_preparado,
    housing_rotulos,
    scoring='neg_mean_squared_error',
    cv=10
)
pontuacoes_arv_dec_reqm = np.sqrt(-pontuacoes)""", line_numbers=True)
with st.expander('Alerta 4', icon='‚ö°'):
    st.html('<p class="fonte_texto">Os recursos de valida√ß√£o cruzada do Scikit-Learn esperam uma fun√ß√£o de '
            'utilidade (quanto maior, melhor) em vez de uma fun√ß√£o de custo (quanto menor, melhor), '
            'portanto, a fun√ß√£o de pontua√ß√£o √© na verdade o oposto do EQM (ou seja, um valor negativo), e '
            '√© por isso que o c√≥digo anterior calcula <b>-pontuacoes</b> antes de calcular a raiz '
            'quadrada.</p>')
st.html('<p class="fonte_texto">Vejamos os resultados:</p>')
st.code("""def mostrar_pontuacoes(pontuacoes):
  print(f'''Pontua√ß√µes: {pontuacoes}
M√©dia: {pontuacoes.mean()}
Desvion padr√£o: {pontuacoes.std()}''')

mostrar_pontuacoes(pontuacoes_arv_dec_reqm)""", line_numbers=True)
st.html('<p class="fonte_texto">Agora a √Årvore de Decis√£o n√£o parece t√£o boa quanto antes. Na verdade, '
        'parece ter um desempenho pior do que o modelo de regress√£o linear! Observe que a valida√ß√£o '
        'cruzada permite obter n√£o apenas uma estimativa do desempenho do seu modelo, mas tamb√©m uma '
        'medida de qu√£o precisa √© essa estimativa (ou seja, seu desvio padr√£o). A √Årvore de Decis√£o tem '
        'uma pontua√ß√£o de aproximadamente 71.469, geralmente ¬±2.141. Voc√™ n√£o teria essas informa√ß√µes se '
        'usasse apenas um conjunto de valida√ß√£o. Mas a valida√ß√£o cruzada tem o custo de treinar o modelo '
        'v√°rias vezes, por isso nem sempre √© poss√≠vel.</p>')
st.html('<p class="fonte_texto">Vamos calcular as mesmas pontua√ß√µes para o modelo de regress√£o linear, s√≥ '
        'para ter certeza:</p>')
st.code("""pontuacoes_reg_lin = cross_val_score(
    reg_lin,
    housing_preparado,
    housing_rotulos,
    scoring='neg_mean_squared_error',
    cv=10
)
pontuacoes_reg_lin_reqm = np.sqrt(-pontuacoes_reg_lin)
mostrar_pontuacoes(pontuacoes_reg_lin_reqm)""", line_numbers=True)
st.html('<p class="fonte_texto">√â isso mesmo: o modelo de √Årvore de Decis√£o est√° t√£o superajustado que '
        'tem um desempenho pior do que o modelo de Regress√£o Linear.</p>')
st.html('<p class="fonte_texto">Vamos tentar um √∫ltimo modelo agora: o <b>RandomForestRegressor</b>. Como '
        'veremos no Cap√≠tulo 7, as Florestas Aleat√≥rias funcionam treinando muitas √Årvores de Decis√£o em '
        'subconjuntos aleat√≥rios de recursos e, em seguida, calculando a m√©dia de suas previs√µes. '
        'Construir um modelo sobre muitos outros modelos √© chamado de <i>Ensemble Learning</i> e '
        'geralmente √© uma √≥tima maneira de levar os algoritmos de AM ainda mais longe:</p>')
st.code("""from sklearn.ensemble import RandomForestRegressor

flo_ale = RandomForestRegressor()
flo_ale.fit(housing_preparado, housing_rotulos)
flo_ale_eqm = mean_squared_error(housing_rotulos, housing_predicoes)
flo_ale_reqm = np.sqrt(flo_ale_eqm)
print(flo_ale_reqm)

pontuacoes_flo_ale = cross_val_score(
    flo_ale,
    housing_preparado,
    housing_rotulos,
    scoring='neg_mean_squared_error',
    cv=10
)
pontuacoes_flo_ale_reqm = np.sqrt(-pontuacoes_flo_ale)
mostrar_pontuacoes(pontuacoes_flo_ale_reqm)""", line_numbers=True)
st.html('<p class="fonte_texto">Uau, isso √© muito melhor: as Florestas Aleat√≥rias parecem muito '
        'promissoras. No entanto, observe que a pontua√ß√£o no conjunto de treinamento ainda √© muito menor '
        'do que nos conjuntos de valida√ß√£o, o que significa que o modelo ainda est√° superajustando o '
        'conjunto de treinamento. As solu√ß√µes poss√≠veis para o overfitting s√£o simplificar o modelo, '
        'restringi-lo (ou seja, regulariz√°-lo) ou obter muito mais dados de treinamento. Antes de '
        'mergulhar mais fundo nas Florestas Aleat√≥rias, no entanto, voc√™ deve experimentar muitos outros '
        'modelos de diversas categorias de algoritmos de Aprendizado de M√°quina (por exemplo, v√°rias '
        'M√°quinas de Vetores de Suporte com kernels diferentes e possivelmente uma rede neural), sem '
        'gastar muito tempo ajustando os hiperpar√¢metros. O objetivo √© selecionar alguns (dois a cinco) '
        'modelos promissores.</p>')
with st.expander('Dica 5', icon='üí°'):
    st.html('<p class="fonte_texto">Voc√™ deve salvar todos os modelos que experimentar para poder voltar '
            'facilmente a qualquer modelo que desejar. Certifique-se de salvar os hiperpar√¢metros e os '
            'par√¢metros treinados, bem como as pontua√ß√µes de valida√ß√£o cruzada e talvez tamb√©m as previs√µes '
            'reais. Isso permitir√° que voc√™ compare facilmente as pontua√ß√µes entre os tipos de modelo e '
            'compare os tipos de erros que eles cometem. Voc√™ pode salvar facilmente modelos Scikit-Learn '
            'usando o m√≥dulo <b>pickle</b> do Python ou usando a biblioteca <b>joblib</b>, que √© mais '
            'eficiente na serializa√ß√£o de grandes arrays NumPy (voc√™ pode instalar esta biblioteca '
            'usando pip):</p>')
    st.code("""import joblib
    
joblib.dump(meu_modelo, 'meu_modelo.pkl')
# e depois...
meu_modelo_carregado = joblib.load('meu_modelo.pkl')""", line_numbers=True)

# --- Ajuste seu modelo --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Ajuste seu modelo</h1>')
st.html('<p class="fonte_texto">Vamos supor que agora voc√™ tenha uma lista de modelos promissores. Agora '
        'voc√™ precisa ajust√°-los. Vejamos algumas maneiras de fazer isso.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Grid search</h2>')
st.html('<p class="fonte_texto">Uma op√ß√£o seria mexer nos hiperpar√¢metros manualmente, at√© encontrar uma '
        '√≥tima combina√ß√£o de valores de hiperpar√¢metros. Este seria um trabalho muito tedioso e talvez '
        'voc√™ n√£o tenha tempo para explorar muitas combina√ß√µes.</p>')
st.html('<p class="fonte_texto">Em vez disso, voc√™ deve obter o <b>GridSearchCV</b> do Scikit-Learn para '
        'procurar por voc√™. Tudo o que voc√™ precisa fazer √© informar quais hiperpar√¢metros deseja '
        'experimentar e quais valores testar, e ele usar√° a valida√ß√£o cruzada para avaliar todas as '
        'combina√ß√µes poss√≠veis de valores de hiperpar√¢metros. Por exemplo, o c√≥digo a seguir procura a '
        'melhor combina√ß√£o de valores de hiperpar√¢metros para o <b>RandomForestRegressor</b>:</p>')
st.code("""from sklearn.model_selection import GridSearchCV

parametros_grid = [
    {'n_estimators': [3, 10, 30], 'max_features': [2, 4, 6, 8]},
    {'n_estimators': [False], 'n_estimators': [3, 10], 'max_features': [2, 3, 4]}
]

flo_ale = RandomForestRegressor()

grid_search = GridSearchCV(
    flo_ale,
    parametros_grid,
    cv=5,
    scoring='neg_mean_squared_error',
    return_train_score=True
)

grid_search.fit(housing_preparado, housing_rotulos)""", line_numbers=True)
with st.expander('Dica 6', icon='üí°'):
    st.html('<p class="fonte_texto">Quando voc√™ n√£o tem ideia de qual valor um hiperpar√¢metro deve ter, uma '
            'abordagem simples √© tentar pot√™ncias consecutivas de 10 (ou um n√∫mero menor se voc√™ quiser uma '
            'pesquisa mais refinada, como mostrado neste exemplo com o hiperpar√¢metro '
            '<b>n_estimators</b>).</p>')
st.html('<p class="fonte_texto">Este <b>parametros_grid</b> diz ao Scikit-Learn para primeiro avaliar '
        'todas as combina√ß√µes 3 √ó 4 = 12 de <b>n_estimators</b> e <b>max_features</b> valores de '
        'hiperpar√¢metros especificados no primeiro <b>dict</b> (n√£o se preocupe com o que esses '
        'hiperpar√¢metros significam por enquanto; eles ser√£o explicados no Cap√≠tulo 7) e, em seguida, '
        'tente todos os 2 √ó 3 = 6 combina√ß√µes de valores de hiperpar√¢metro no segundo <b>dict</b>, mas '
        'desta vez com o hiperpar√¢metro <b>bootstrap</b> definido como False em vez de True (que √© o '
        'valor padr√£o para este hiperpar√¢metro).</p>')
st.html('<p class="fonte_texto">A pesquisa em grade (grid search) explorar√° 12 + 6 = 18 combina√ß√µes de '
        'valores de '
        'hiperpar√¢metros de <b>RandomForestRegressor</b> e treinar√° cada modelo 5 vezes (j√° que estamos '
        'usando valida√ß√£o cruzada qu√≠ntupla). Ou seja, ao todo, ser√£o 18 √ó 5 = 90 rodadas de treinamento! '
        'Pode levar bastante tempo, mas quando terminar voc√™ poder√° obter a melhor combina√ß√£o de '
        'par√¢metros como este:</p>')
st.code('print(grid_search.best_params_)', line_numbers=True)
with st.expander('Dica 7', icon='üí°'):
    st.html('<p class="fonte_texto">Como 8 e 30 s√£o os valores m√°ximos avaliados, voc√™ provavelmente '
            'deveria tentar pesquisar novamente com valores mais altos; a pontua√ß√£o pode continuar a '
            'melhorar.</p>')
st.html('<p class="fonte_texto">Voc√™ tamb√©m pode obter o melhor estimador diretamente:</p>')
st.code('print(grid_search.best_estimator_)', line_numbers=True)
with st.expander('Nota 1', icon='üìù'):
    st.html('<p class="fonte_texto">Se <b>GridSearchCV</b> for inicializado com <b>refit=True</b> (que √© '
            'o padr√£o), depois de encontrar o melhor estimador usando valida√ß√£o cruzada, ele o treinar√° '
            'novamente em todo o conjunto de treinamento. Geralmente, isso √© uma boa ideia, pois fornecer '
            'mais dados provavelmente melhorar√° seu desempenho.</p>')
st.html('<p class="fonte_texto">E √© claro que as pontua√ß√µes da avalia√ß√£o tamb√©m est√£o dispon√≠veis:</p>')
st.code("""resultados = grid_search.cv_results_
for media, parametros in zip(resultados['mean_test_score'], resultados['params']):
  print(np.sqrt(-media), parametros)""", line_numbers=True)
st.html('<p class="fonte_texto">Neste exemplo, obtemos a melhor solu√ß√£o definindo o hiperpar√¢metro '
        '<b>max_features</b> como 8 e o hiperpar√¢metro <b>n_estimators</b> como 30. A pontua√ß√£o REQM para '
        'esta combina√ß√£o √© 49.819 (para voc√™ ser√° diferente o valor), o que √© um pouco melhor do que a '
        'pontua√ß√£o obtida anteriormente usando os valores padr√£o do hiperpar√¢metro. Parab√©ns, voc√™ '
        'ajustou com sucesso seu melhor modelo!</p>')
with st.expander('Dica 8', icon='üí°'):
    st.html('<p class="fonte_texto">N√£o se esque√ßa de que voc√™ pode tratar algumas etapas de prepara√ß√£o de '
            'dados como hiperpar√¢metros. Por exemplo, a pesquisa em grade descobrir√° automaticamente se '
            'deve ou n√£o adicionar um recurso sobre o qual voc√™ n√£o tinha certeza (por exemplo, usando o '
            'hiperpar√¢metro <b>add_quartos_por_aposento</b> do seu transformador '
            '<b>AdicionadorAtributosCombinados</b>). Da mesma forma, ele pode ser usado para encontrar '
            'automaticamente a melhor maneira de lidar com valores discrepantes, recursos ausentes, sele√ß√£o '
            'de recursos e muito mais.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Pesquisa aleat√≥ria</h2>')
st.html('<p class="fonte_texto">A abordagem de pesquisa em grade √© adequada quando voc√™ explora '
        'relativamente poucas combina√ß√µes, como no exemplo anterior, mas quando o espa√ßo de pesquisa do '
        'hiperpar√¢metro √© grande, geralmente √© prefer√≠vel usar <b>RandomizedSearchCV</b>. Esta classe '
        'pode ser usada da mesma maneira que a classe <b>GridSearchCV</b>, mas em vez de testar todas as '
        'combina√ß√µes poss√≠veis, ela avalia um determinado n√∫mero de combina√ß√µes aleat√≥rias selecionando '
        'um valor aleat√≥rio para cada hiperpar√¢metro em cada itera√ß√£o. Essa abordagem tem dois benef√≠cios '
        'principais:</p>')
st.html('<ul class="fonte_texto">'
            '<li>Se voc√™ permitir que a pesquisa aleat√≥ria seja executada por, digamos, 1.000 itera√ß√µes, essa '
            'abordagem explorar√° 1.000 valores diferentes para cada hiperpar√¢metro (em vez de apenas alguns '
            'valores por hiperpar√¢metro com a abordagem de pesquisa em grade).</li>'
            '<li>Simplesmente definindo o n√∫mero de itera√ß√µes, voc√™ ter√° mais controle sobre o or√ßamento de '
            'computa√ß√£o que deseja alocar para a pesquisa de hiperpar√¢metros.</li>'
        '</ul>')
st.html('<h2 class="fonte_subtitulo_aula">M√©todos de conjunto</h2>')
st.html('<p class="fonte_texto">Outra forma de ajustar seu sistema √© tentar combinar os modelos com melhor '
        'desempenho. O grupo (ou ‚Äúconjunto‚Äù) muitas vezes ter√° um desempenho melhor do que o melhor modelo '
        'individual (assim como as Florestas Aleat√≥rias t√™m um desempenho melhor do que as √Årvores de '
        'Decis√£o individuais nas quais elas dependem), especialmente se os modelos individuais cometerem '
        'tipos de erros muito diferentes. Abordaremos esse t√≥pico com mais detalhes no Cap√≠tulo 7.</p>')
st.html('<h2 class="fonte_subtitulo_aula">Analise os melhores modelos e seus erros</h2>')
st.html('<p class="fonte_texto">Frequentemente, voc√™ obter√° bons insights sobre o problema inspecionando '
        'os melhores modelos. Por exemplo, o <b>RandomForestRegressor</b> pode indicar a import√¢ncia '
        'relativa de cada atributo para fazer previs√µes precisas:</p>')
st.code('''importancia_features = grid_search.best_estimator_.feature_importances_
print(importancia_features)''', line_numbers=True)
st.html('<p class="fonte_texto">Vamos exibir essas pontua√ß√µes de import√¢ncia ao lado dos nomes dos '
        'atributos correspondentes:</p>')
st.code("""atributos_extra = ['aposentos_por_casa', 'populacao_por_casa', 'quartos_pos_aposentos']
codificador_cat = pipeline_completo.named_transformers_['cat']
atributos_cat_1_hot = list(codificador_cat.categories_[0])
atributos = num_atributos + atributos_extra + atributos_cat_1_hot
sorted(zip(importancia_features, atributos), reverse=True)""", line_numbers=True)
tabela_2_10 = pd.read_csv('./assets/imagens/ia_scikit_learn_keras_tensorflow/aula_02/tabela_2_10.csv')
st.dataframe(tabela_2_10, hide_index=True)
st.html('<p class="fonte_texto">Com essas informa√ß√µes, voc√™ pode tentar eliminar alguns dos recursos menos '
        '√∫teis (por exemplo, aparentemente apenas uma categoria <b>ocean_proximity</b> √© realmente √∫til, '
        'ent√£o voc√™ pode tentar eliminar as outras).</p>')
st.html('<p class="fonte_texto">Voc√™ tamb√©m deve observar os erros espec√≠ficos que seu sistema comete e, '
        'em seguida, tentar entender por que ele os comete e o que poderia resolver o problema (adicionar '
        'recursos extras ou eliminar os n√£o informativos, limpar valores discrepantes, etc.).</p>')
st.html('<h2 class="fonte_subtitulo_aula">Avalie seu sistema no conjunto de testes</h2>')
st.html('<p class="fonte_texto">Depois de ajustar seus modelos por um tempo, voc√™ eventualmente ter√° um '
        'sistema com desempenho suficientemente bom. Agora √© a hora de avaliar o modelo final no conjunto '
        'de teste. N√£o h√° nada de especial neste processo; apenas pegue os preditores e os r√≥tulos do seu '
        'conjunto de testes, execute seu <b>pipeline_completo</b> para transformar os dados (chame '
        '<b>transform()</b>, n√£o <b>fit_transform()</b>, voc√™ n√£o quer ajustar o conjunto de testes!) e '
        'avalie o modelo final no conjunto de testes:</p>')
st.code('''modelo_final = grid_search.best_estimator_

X_teste = conjunto_teste_estratificado.drop('median_house_value', axis=1)
y_teste = conjunto_teste_estratificado['median_house_value'].copy()

X_teste_preparado = pipeline_completo.transform(X_teste)

predicoes_finais = modelo_final.predict(X_teste_preparado)

eqm_final = mean_squared_error(y_teste, predicoes_finais)
reqm_final = np.sqrt(eqm_final)

print(reqm_final)''', line_numbers=True)
st.html('<p class="fonte_texto">Em alguns casos, essa estimativa pontual do erro de generaliza√ß√£o n√£o '
        'ser√° suficiente para convenc√™-lo a lan√ßar: e se for apenas 0,1% melhor que o modelo atualmente '
        'em produ√ß√£o? Voc√™ pode querer ter uma ideia de qu√£o precisa √© essa estimativa. Para isso, voc√™ '
        'pode calcular um <i>intervalo de confian√ßa</i> de 95% para o erro de generaliza√ß√£o usando '
        '<b>scipy.stats.t.interval()</b>:</p>')
st.code('''from scipy import stats

confianca = 0.95
quadrado_erros = (predicoes_finais - y_teste) ** 2
np.sqrt(stats.t.interval(
    confianca,
    len(quadrado_erros) - 1,
    loc=quadrado_erros.mean(),
    scale=stats.sem(quadrado_erros)
))''', line_numbers=True)
st.html('<p class="fonte_texto">Se voc√™ fez muitos ajustes de hiperpar√¢metros, o desempenho geralmente '
        'ser√° um pouco pior do que o medido usando valida√ß√£o cruzada (porque seu sistema acaba sendo '
        'ajustado para ter um bom desempenho nos dados de valida√ß√£o e provavelmente n√£o ter√° um '
        'desempenho t√£o bom em conjuntos de dados desconhecidos). N√£o √© o caso neste exemplo, mas quando '
        'isso acontece voc√™ deve resistir √† tenta√ß√£o de ajustar os hiperpar√¢metros para fazer com que os '
        'n√∫meros pare√ßam bons no conjunto de teste; seria pouco prov√°vel que as melhorias se '
        'generalizassem para novos dados.</p>')
st.html('<p class="fonte_texto">Agora vem a fase de pr√©-lan√ßamento do projeto: voc√™ precisa apresentar '
        'sua solu√ß√£o (destacando o que voc√™ aprendeu, o que funcionou e o que n√£o funcionou, quais '
        'suposi√ß√µes foram feitas e quais s√£o as limita√ß√µes do seu sistema), documentar tudo e criar boas '
        'apresenta√ß√µes com visualiza√ß√µes claras e declara√ß√µes f√°ceis de lembrar (por exemplo, ‚Äúa renda '
        'mediana √© o preditor n√∫mero um dos pre√ßos da habita√ß√£o‚Äù). Neste exemplo habitacional da '
        'Calif√≥rnia, o desempenho final do sistema n√£o √© melhor do que as estimativas de pre√ßos dos '
        'especialistas, que muitas vezes estavam erradas em cerca de 20%, mas ainda pode ser uma boa '
        'ideia lan√ß√°-lo, especialmente se isso libertar algum tempo para os especialistas, para que '
        'possam trabalhar em tarefas mais interessantes e produtivas.</p>')

# --- Inicie, monitore e mantenha seu sistema --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Inicie, monitore e mantenha seu sistema</h1>')
st.html('<p class="fonte_texto">Perfeito, voc√™ obteve aprova√ß√£o para lan√ßar! Agora voc√™ precisa preparar '
        'sua solu√ß√£o para produ√ß√£o (por exemplo, aprimorar o c√≥digo, escrever documenta√ß√£o e testes e '
        'assim por diante). Em seguida, voc√™ poder√° implantar seu modelo em seu ambiente de produ√ß√£o. Uma '
        'maneira de fazer isso √© salvar o modelo treinado do Scikit-Learn (por exemplo, usando '
        '<b>joblib</b>), incluindo o pr√©-processamento completo e o pipeline de previs√£o, depois carregar '
        'esse modelo treinado em seu ambiente de produ√ß√£o e us√°-lo para fazer previs√µes chamando seu '
        'm√©todo <b>predict()</b>. Por exemplo, talvez o modelo seja usado dentro de um site: o usu√°rio '
        'digitar√° alguns dados sobre um novo distrito e clicar√° no bot√£o Estimar Pre√ßo. Isso enviar√° uma '
        'consulta contendo os dados ao servidor web, que os encaminhar√° para sua aplica√ß√£o web e, '
        'finalmente, seu c√≥digo simplesmente chamar√° o m√©todo <b>predict()</b> do modelo (voc√™ deseja '
        'carregar o modelo na inicializa√ß√£o do servidor, em vez de sempre que o modelo for usado). Como '
        'alternativa, voc√™ pode agrupar o modelo em um servi√ßo Web dedicado que seu aplicativo Web pode '
        'consultar por meio de uma API REST. Isso facilita a atualiza√ß√£o do seu '
        'modelo para novas vers√µes sem interromper o aplicativo principal. Ele tamb√©m simplifica o '
        'dimensionamento, j√° que voc√™ pode iniciar quantos servi√ßos Web forem necess√°rios e balancear a '
        'carga das solicita√ß√µes provenientes de seu aplicativo Web nesses servi√ßos Web. Al√©m disso, '
        'permite que seu aplicativo web use qualquer linguagem, n√£o apenas Python.</p>')
st.html('<p class="fonte_texto">Outra estrat√©gia popular √© implantar seu modelo na nuvem, por exemplo, no '
        'Google Cloud AI Platform (anteriormente conhecido como Google Cloud ML Engine): basta salvar seu '
        'modelo usando <b>joblib</b> e carreg√°-lo no Google Cloud Storage (GCS), depois ir para o Google '
        'Cloud AI Platform e criar uma nova vers√£o do modelo, apontando-a para o arquivo GCS. √â isso! '
        'Isso fornece um servi√ßo da Web simples que cuida do balanceamento de carga e do dimensionamento '
        'para voc√™. S√£o necess√°rias solicita√ß√µes JSON contendo os dados de entrada (por exemplo, de um '
        'distrito) e retorna respostas JSON contendo as previs√µes. Voc√™ pode ent√£o usar este servi√ßo da '
        'web em seu site (ou em qualquer ambiente de produ√ß√£o que estiver usando). Como veremos no '
        'Cap√≠tulo 19, a implanta√ß√£o de modelos do TensorFlow no AI Platform n√£o √© muito diferente da '
        'implanta√ß√£o de modelos do Scikit-Learn.</p>')
st.html('<p class="fonte_texto">Mas a implanta√ß√£o n√£o √© o fim da hist√≥ria. Voc√™ tamb√©m precisa escrever '
        'um c√≥digo de monitoramento para verificar o desempenho ao vivo do seu sistema em intervalos '
        'regulares e acionar alertas quando ele cair. Esta pode ser uma queda acentuada, provavelmente '
        'devido a um componente quebrado na sua infraestrutura, mas esteja ciente de que tamb√©m pode ser '
        'uma queda suave que pode facilmente passar despercebida por um longo tempo. Isto √© bastante '
        'comum porque os modelos tendem a ‚Äúapodrecer‚Äù com o tempo: de fato, o mundo muda, por isso, se o '
        'modelo foi treinado com os dados do ano passado, pode n√£o ser adaptado aos dados de hoje.</p>')
with st.expander('Alerta 5', icon='‚ö°'):
    st.html('<p class="fonte_texto">Mesmo um modelo treinado para classificar imagens de c√£es e gatos pode '
            'precisar ser treinado novamente regularmente, n√£o porque c√£es e gatos sofrer√£o muta√ß√µes '
            'durante a noite, mas porque as c√¢meras est√£o sempre mudando, junto com os formatos de imagem, '
            'nitidez, brilho e propor√ß√µes de tamanho. Al√©m disso, as pessoas podem adorar ra√ßas diferentes '
            'no pr√≥ximo ano, ou podem decidir vestir os seus animais de estima√ß√£o com chap√©us min√∫sculos, '
            'quem sabe?</p>')
st.html('<p class="fonte_texto">Ent√£o voc√™ precisa monitorar o desempenho ao vivo do seu modelo. Mas como '
        'voc√™ faz isso? Bem, isso depende. Em alguns casos, o desempenho do modelo pode ser inferido a '
        'partir de m√©tricas posteriores. Por exemplo, se o seu modelo faz parte de um sistema de '
        'recomenda√ß√£o e sugere produtos nos quais os usu√°rios podem estar interessados, √© f√°cil monitorar '
        'o n√∫mero de produtos recomendados vendidos a cada dia. Se esse n√∫mero cair (em compara√ß√£o com '
        'produtos n√£o recomendados), o principal suspeito √© o modelo. Isso pode ocorrer porque o pipeline '
        'de dados est√° quebrado ou talvez o modelo precise ser treinado novamente com dados novos (como '
        'discutiremos em breve).</p>')
st.html('<p class="fonte_texto">Por√©m, nem sempre √© poss√≠vel determinar o desempenho do modelo sem '
        'qualquer an√°lise humana. Por exemplo, suponha que voc√™ treinou um modelo de classifica√ß√£o de '
        'imagens (consulte o Cap√≠tulo 3) para detectar v√°rios defeitos de produtos em uma linha de '
        'produ√ß√£o. Como voc√™ pode receber um alerta se o desempenho do modelo cair, antes que milhares de '
        'produtos defeituosos sejam enviados aos seus clientes? Uma solu√ß√£o √© enviar aos avaliadores '
        'humanos uma amostra de todas as imagens que o modelo classificou (especialmente as imagens '
        'sobre as quais o modelo n√£o tinha tanta certeza). Dependendo da tarefa, os avaliadores podem '
        'precisar ser especialistas ou n√£o especialistas, como trabalhadores de uma plataforma de '
        'crowdsourcing (por exemplo, Amazon Mechanical Turk). Em algumas aplica√ß√µes, podem at√© ser os '
        'pr√≥prios utilizadores, respondendo, por exemplo, atrav√©s de inqu√©ritos ou captchas '
        'reaproveitados.</p>')
st.html('<p class="fonte_texto">De qualquer forma, √© necess√°rio implementar um sistema de monitoramento '
        '(com ou sem avaliadores humanos para avaliar o modelo ao vivo), bem como todos os processos '
        'relevantes para definir o que fazer em caso de falhas e como se preparar para elas. Infelizmente, '
        'isso pode dar muito trabalho. Na verdade, muitas vezes d√° muito mais trabalho do que construir e '
        'treinar um modelo.</p>')
st.html('<p class="fonte_texto">Se os dados continuarem evoluindo, voc√™ precisar√° atualizar seus conjuntos '
        'de dados e retreinar seu modelo regularmente. Voc√™ provavelmente deveria automatizar todo o '
        'processo tanto quanto poss√≠vel. Aqui est√£o algumas coisas que voc√™ pode automatizar:</p>')
st.html('<ul class="fonte_texto">'
            '<li>Colete dados novos regularmente e rotule-os (por exemplo, usando avaliadores humanos).</li>'
            '<li>Escreva um script para treinar o modelo e ajustar os hiperpar√¢metros automaticamente. '
            'Este script pode ser executado automaticamente, por exemplo, todos os dias ou todas as '
            'semanas, dependendo das suas necessidades.</li>'
            '<li>Escreva outro script que avalie o novo modelo e o modelo anterior no conjunto de testes '
            'atualizado e implante o modelo em produ√ß√£o se o desempenho n√£o tiver diminu√≠do (se diminuiu, '
            'certifique-se de investigar o motivo).</li>'
        '</ul>')
st.html('<p class="fonte_texto">Voc√™ tamb√©m deve avaliar a qualidade dos dados de entrada do modelo. √Äs '
        'vezes, o desempenho ser√° ligeiramente degradado devido a um sinal de baixa qualidade (por '
        'exemplo, um sensor com defeito enviando valores aleat√≥rios ou a sa√≠da de outra equipe ficando '
        'obsoleta), mas pode demorar um pouco at√© que o desempenho do seu sistema seja degradado o '
        'suficiente para acionar um alerta. Se voc√™ monitorar as entradas do seu modelo, poder√° perceber '
        'isso mais cedo. Por exemplo, voc√™ pode acionar um alerta se mais e mais entradas estiverem '
        'faltando um recurso, ou se sua m√©dia ou desvio padr√£o se afastar muito do conjunto de '
        'treinamento, ou se um recurso categ√≥rico come√ßar a conter novas categorias.</p>')
st.html('<p class="fonte_texto">Por fim, certifique-se de manter backups de cada modelo criado e de ter o '
        'processo e as ferramentas em vigor para reverter rapidamente para um modelo anterior, caso o '
        'novo modelo comece a falhar gravemente por algum motivo. Ter backups tamb√©m permite comparar '
        'facilmente novos modelos com os anteriores. Da mesma forma, voc√™ deve manter backups de cada '
        'vers√£o de seus conjuntos de dados para poder reverter para um conjunto de dados anterior se o '
        'novo for corrompido (por exemplo, se os dados novos adicionados a ele estiverem cheios de '
        'valores discrepantes). Ter backups de seus conjuntos de dados tamb√©m permite avaliar qualquer '
        'modelo em rela√ß√£o a qualquer conjunto de dados anterior.</p>')
with st.expander('Dica 9', icon='üí°'):
    st.html('<p class="fonte_texto">Voc√™ pode criar v√°rios subconjuntos do conjunto de testes para avaliar '
            'o desempenho do seu modelo em partes espec√≠ficas dos dados. Por exemplo, voc√™ pode querer ter '
            'um subconjunto contendo apenas os dados mais recentes ou um conjunto de testes para tipos '
            'espec√≠ficos de dados (por exemplo, distritos localizados no interior versus distritos '
            'localizados perto do oceano). Isso lhe dar√° uma compreens√£o mais profunda dos pontos fortes e '
            'fracos do seu modelo.</p>')
st.html('<p class="fonte_texto">Como voc√™ pode ver, o Aprendizado de M√°quina envolve muita infraestrutura, '
        'ent√£o n√£o se surpreenda se seu primeiro projeto de AM exigir muito esfor√ßo e tempo para ser '
        'constru√≠do e implantado em produ√ß√£o. Felizmente, quando toda a infraestrutura estiver instalada, '
        'passar da ideia √† produ√ß√£o ser√° muito mais r√°pido.</p>')

# --- Experimente! --- #
st.write('---')
st.html('<h1 class="fonte_titulo_aula">Experimente!</h1>')
st.html('<p class="fonte_texto">Espero que este cap√≠tulo tenha lhe dado uma boa ideia de como √© um '
        'projeto de Aprendizado de M√°quina, al√©m de mostrar algumas das ferramentas que voc√™ pode usar '
        'para treinar um √≥timo sistema. Como voc√™ pode ver, grande parte do trabalho est√° na etapa de '
        'prepara√ß√£o de dados: constru√ß√£o de ferramentas de monitoramento, configura√ß√£o de pipelines de '
        'avalia√ß√£o humana e automatiza√ß√£o do treinamento regular do modelo. Os algoritmos de aprendizado '
        'de m√°quina s√£o importantes, √© claro, mas provavelmente √© prefer√≠vel estar confort√°vel com o '
        'processo geral e conhecer bem tr√™s ou quatro algoritmos, em vez de gastar todo o seu tempo '
        'explorando algoritmos avan√ßados.</p>')
st.html('<p class="fonte_texto">Ent√£o, se voc√™ ainda n√£o fez isso, agora √© um bom momento para pegar um '
        'laptop, selecionar um conjunto de dados de seu interesse e tentar passar por todo o processo de '
        'A a Z. Um bom lugar para come√ßar √© em um site de competi√ß√£o como '
        '<a href="https://www.kaggle.com/">Kaggle</a>: voc√™ ter√° um conjunto de dados para brincar, um '
        'objetivo claro e pessoas com quem compartilhar a experi√™ncia. Divirta-se!</p>')